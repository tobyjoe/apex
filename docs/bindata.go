// Code generated by go-bindata.
// sources:
// aws-credentials.md
// bindata.go
// build.md
// delete.md
// deploy.md
// docs.go
// docs.md
// dryrun.md
// env.md
// faq.md
// functions.md
// getting-started.md
// hooks.md
// ignore.md
// installation.md
// invoke.md
// java.md
// links.md
// list.md
// logs.md
// metrics.md
// projects.md
// rollback.md
// shim.md
// upgrade.md
// DO NOT EDIT!

package docs

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _awsCredentialsMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\x4d\x6f\xd4\x30\x10\xbd\xe7\x57\x8c\x5a\x0e\x20\xed\x26\xf7\x0a\x21\x95\x55\x80\x15\x15\x45\xdd\x02\x42\x08\x35\x53\x7b\x92\x58\x38\x76\x64\x3b\x09\xe1\xc0\x6f\x67\x1c\x77\xb7\x5f\x7b\xe0\xb0\x5a\xc5\xf3\xf1\xe6\xbd\x37\x93\xbd\xa5\xda\x3a\x82\xc1\x2b\xd3\xc0\x79\x4f\xbf\x61\xb6\x03\x18\x22\x09\xc1\x42\xad\x9c\x0f\xd0\xa8\x91\x40\x85\x18\x71\x80\x42\xd8\xc1\x04\x10\x8e\x24\x99\xa0\x50\x7b\xf0\x16\x42\x8b\x21\xd5\x0b\x34\xd0\xa1\xc1\x86\xc0\x91\xe7\x12\x41\x3e\x87\xeb\x96\x18\x06\xe3\x0f\xcc\xd0\xdd\x92\x03\x5b\xc3\x84\xb3\x8f\x38\x32\x35\x58\xc1\xd4\x2a\xd1\x2e\x69\x76\x08\x5a\x19\x1e\x23\x16\xe6\x59\x76\x7a\x0a\x5f\x15\x02\x99\x51\x39\x6b\x3a\x86\x86\x11\x9d\xc2\x5b\x4d\x3e\xcb\xbe\x2c\xf3\x1f\x0d\x82\x35\x7a\x5e\x2d\xb4\xba\x81\xd9\xf8\x9e\x84\xaa\x67\x06\x24\xa8\xad\xd6\x76\xe2\xd2\xb3\x2c\x5b\x43\x75\xfe\x6d\x77\x73\xbe\xd9\x94\xbb\xdd\xcd\xc7\xf2\x7b\x05\xfc\x7d\xe0\xcb\xff\xe4\x3d\xfc\xa2\x79\x9f\xb9\x2b\x37\x57\xe5\xf5\xf3\x4c\x4f\xac\x4d\x78\x98\x79\x55\xbe\xdf\x5e\x7e\x4a\x59\x8e\x1a\x65\xcd\x81\xcf\xdf\x22\xc7\xc9\xb3\xd0\x0f\x68\xc4\xc9\xd2\x7b\xf1\x50\x65\x34\xf2\xf0\x6c\x4d\xad\x9a\x54\x95\x98\xe1\x7c\x20\xb6\x40\x7e\xbe\xba\x7c\xb7\xbd\x28\xab\xa8\x6e\x20\xad\x01\xa3\x37\x49\x5e\x6b\x28\x3e\x3b\xaa\x59\x5a\x23\x28\x87\x0f\x76\xa2\x91\xdc\x0a\x54\xbd\xb4\x63\x3f\x8c\x0d\xd0\xe2\x18\xfd\x7a\x0e\xba\x02\xeb\xe0\x24\x51\x39\x01\xe5\x97\x6c\x49\x75\x34\x2c\x49\xed\x5b\x3b\x68\xc9\x5a\x84\xb8\x39\x93\x0a\xed\x42\xeb\x91\x1c\xc7\xec\xe2\x4d\x89\x93\xa1\x84\x2e\xee\xa5\x35\x90\x60\x07\x77\xa7\x8c\xa7\x3b\xda\xa3\xa2\x09\x7e\x6c\x1e\x47\x17\x89\x37\x17\xdb\x9f\x2f\xdb\x10\xfa\xb3\xa2\x90\x56\xf8\x38\x7d\x8e\x1d\xfe\xb1\x26\x17\xb6\x2b\x84\x56\x85\xc6\x40\x3e\x14\x83\x27\xd7\x0c\x4a\x52\x7c\x5c\x8b\x16\xfb\x75\x43\x21\x70\xb7\xb5\x0f\xe8\x02\xc9\xbc\x0d\x9d\x7e\x75\xbf\x80\xbd\xb3\x11\x1f\x6a\x8d\x4d\x96\x6d\x93\x5e\x8b\x50\xb7\x96\x49\xfe\x97\x6f\x4f\x1d\x8b\x83\xef\xfb\x4a\xe5\x48\x04\x3d\x27\xcd\xaa\xc5\xb6\xf5\x7a\x1f\x7d\x6d\xb0\xa3\x37\x15\x1b\x49\x86\x75\xf7\x43\xe4\xcd\x9c\xf8\xe0\xe4\x72\x65\xec\x45\x47\x68\xfc\x33\x1b\xd9\xf0\x3d\x1c\x9a\xf9\xf8\xa9\xac\xa0\x4d\x8b\x70\x7f\x2d\x0c\x3c\xb2\x3c\x07\x13\x09\xe3\x02\xf5\xe4\x30\xb0\xf7\x7c\x36\x55\x55\x65\x2f\xe0\xc9\x98\xdd\x8c\x7d\x1f\xbf\x24\x6f\x45\xaf\xed\xbc\xa4\xfd\x0b\x00\x00\xff\xff\x1c\x03\xc5\x97\x6d\x04\x00\x00")

func awsCredentialsMdBytes() ([]byte, error) {
	return bindataRead(
		_awsCredentialsMd,
		"aws-credentials.md",
	)
}

func awsCredentialsMd() (*asset, error) {
	bytes, err := awsCredentialsMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "aws-credentials.md", size: 1133, mode: os.FileMode(420), modTime: time.Unix(1454259434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bindataGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x97\x5d\x8f\xdb\xd6\x11\x86\xaf\x97\xbf\x82\x11\x90\x42\x2a\x6c\x2d\x45\x52\xfc\x30\xe0\x9b\xd8\x2e\xe0\x8b\x38\x40\xeb\xbb\x6e\x11\x1c\x92\xe7\xc8\x8c\x25\x52\x21\xa9\xcd\xae\x83\xfc\xf7\xce\xc3\x39\x54\x37\x76\x5d\xdf\x74\x01\xae\xce\xd7\xcc\xbc\x33\xf3\xce\x1c\xf2\xf6\x36\x7c\xd5\x37\x36\x3c\xd8\xce\x0e\x66\xb2\x4d\x58\x3d\x86\x87\xfe\x79\xd5\x76\x8d\x99\xcc\x36\x90\x03\x63\x7f\x19\x6a\x3b\xbe\x60\x6c\x7e\x1b\x9f\xd7\x83\x6d\x6c\x37\xb5\xe6\x38\x6e\x4f\x0d\xab\xcb\xe9\x43\x3f\xcf\x2e\xed\xb1\xf1\x3b\x8d\x3d\xda\xc9\x5e\x27\xe7\x63\xff\xb8\x4c\xfa\x7a\xf4\x02\xf3\xd0\xaf\x0e\x8f\xc3\xa5\xf3\x13\xdb\xdd\xfb\x91\x33\xbf\x2e\xa3\x4b\x57\x4f\x6d\xdf\x2d\x02\x07\x3b\x4d\x6d\x77\x78\x3e\x4e\x66\x10\xf8\x7e\xf5\x43\xdf\x7f\x5c\x4e\xb4\x87\xae\x1f\x16\x08\x6d\x27\x07\x8f\x47\x83\x8a\xeb\xd2\x7d\xff\x71\xd9\xff\xc5\xdc\x1b\x3f\x3c\xb6\xdd\x55\xc7\xb1\x1d\xa7\x65\xd8\x1f\x96\xd5\x93\x9d\x86\xf6\x0a\xfd\x3c\xf4\xbf\xd8\x7a\x5a\xa6\x43\x7f\x3c\x56\xa6\xfe\xe8\xa7\xe3\x87\xf6\xe4\x87\x97\xf3\x61\x30\xcd\x62\xf1\xf5\x4f\xe1\xbb\x9f\xde\x87\x6f\x5e\xbf\x7d\xff\x5d\x10\x9c\x45\xc2\x1c\xec\x1c\x92\x20\x68\x4f\xe7\x7e\x98\xc2\x75\x70\xb3\xaa\x1e\x27\x3b\xae\x64\x50\xf7\xa7\xf3\x60\xc7\xf1\xf6\xf0\xa9\x3d\xb3\xe0\x4e\x13\x3f\x6d\xaf\xff\x6f\xdb\xfe\x32\xb5\x47\x26\xfd\x2c\x70\x36\xd3\x87\x5b\xd7\x1e\x2d\x03\x16\x46\x41\xdd\x1d\xe6\xbd\xa9\x3d\xd9\x55\xb0\x09\x02\xc2\xba\xa4\xf1\xef\xd6\x34\x6b\x06\xe1\x3f\xff\x85\xd9\x67\x61\x67\x4e\x36\x54\xb1\x4d\xb8\x5e\x56\xed\x30\xf4\xc3\x26\xfc\x3d\xb8\x39\x7c\x9a\x67\xe1\x8b\x97\x21\xa8\xb6\xef\xec\x6f\x28\xb1\xc3\x7a\x86\xcd\xfc\x87\x8b\x73\x32\x47\xed\x66\x13\xdc\xb4\x6e\x16\xf8\xee\x65\xd8\xb5\x47\x54\xdc\x0c\x76\xba\x0c\x1d\xd3\x67\xa1\xb8\xb4\x7d\x83\x76\xb7\x5e\xa1\x28\xfc\xfe\xd7\x17\xe1\xf7\xf7\x2b\x45\x32\xdb\x12\x1d\x7f\x04\xc1\xcd\xbd\x19\x84\x6f\x2e\x54\x3b\x6a\x24\xb8\xf9\x59\xe1\xbc\x0c\xdb\x7e\xfb\xaa\x3f\x3f\xae\xff\x22\x67\x9e\x09\x36\x91\xaa\x8f\x6f\x16\xa4\xdb\x57\xc7\x7e\xb4\x6b\x71\xff\xff\x84\x07\x35\xaa\xff\x2b\x8a\xe4\xa0\xe2\xf6\x8b\x02\x6b\xfb\x03\xd0\xd7\x9b\x67\x9c\x08\x64\x6f\x7a\x3c\xdb\xd0\x8c\xa3\x9d\x08\xf9\xa5\x9e\xd0\x32\xfb\xe7\xf3\x21\x66\x3a\xd7\x87\x61\x3f\x6e\xff\x26\x69\x7d\x2b\x93\xab\x9c\x4f\xe1\xb2\xfe\x44\xc3\x9c\x43\xf9\xd3\x34\x06\x37\x63\xfb\x69\x9e\xb7\xdd\x94\xa5\xc1\xcd\x89\x2e\x10\x5e\x95\xfe\x28\xd3\x79\xf1\xbd\x30\x24\x84\x26\x5b\x46\xd8\x99\xa9\xb2\x76\xed\xe7\xb6\x36\xe1\x3b\x31\xb1\xde\x78\x0b\xd8\xf4\x5e\xba\x76\x8b\x75\x11\xfe\xba\xec\x3f\x04\x8e\xc8\xce\x68\xfe\x2c\x0a\xd0\xff\x29\x0a\x56\x11\x7d\x82\xfc\xcf\x0a\x70\xed\x5b\x0a\x70\x4e\x74\x5c\x1d\xfd\x42\x83\xf7\xfe\xeb\x4a\xde\x8e\xaf\xdb\x41\x54\x54\x7d\x7f\x7c\x2a\x2d\x5d\xf2\x1b\x9e\x3f\x8e\xea\xb8\x1d\x9c\xa9\xed\xef\x7f\x3c\x91\xf6\x94\x80\xe5\x3f\x4b\xeb\x7d\xf5\x9f\xce\xfb\x63\x23\xf4\x56\x3e\xac\x57\x77\x0f\x3b\x77\xf7\x50\x54\x77\x0f\x51\x21\x4f\xe4\x9f\xf2\xee\x21\xb3\xb2\xee\xd7\x1c\x67\xea\xbb\x87\x7d\x72\xf7\x90\x36\xb2\x27\xf3\x26\xbd\x7b\x48\x64\x6f\x27\x4f\x25\x6b\x36\x97\xfd\xdc\x9f\x33\x22\x27\xf2\xb1\xec\x59\xd9\x8b\x33\xd1\x21\x7b\x91\xac\xc7\xbb\xbb\x87\x72\x2f\x67\xe4\x29\x90\xdf\xeb\x93\xca\xd3\xc8\xd9\x28\x96\x71\xac\x78\x92\xbd\xda\xcc\x05\x5f\x29\x6b\x7b\xd6\xe4\xc9\x45\x5f\x86\xfd\x4a\xb1\x5a\xd1\x59\x47\x8a\x2b\x13\x3b\x3b\xc1\x90\xcb\x6f\x05\x26\xa7\xf2\x16\x9c\x91\x62\xab\x45\xaf\x13\xbd\x4e\xe4\x6c\xa6\xf8\x13\x39\x5b\x26\x3a\x36\x60\x91\x73\x89\x3c\x85\xd8\xad\xe5\x5c\x2c\x3a\x9a\x44\xed\xe4\x62\x33\x15\xbd\x15\xf6\x64\xaf\x12\x1d\x91\xec\xed\x04\x5b\x1c\x2b\x26\x64\xf0\xc3\x88\xbe\x52\xf0\x44\xc4\x4c\x64\x8d\x9c\x29\xd9\x93\x71\xb1\x57\x99\x7c\xa7\xb1\xe0\x7c\x53\xa8\x6c\x94\x6a\x6c\x0b\xe2\x28\xe3\x52\x74\x1a\xf0\x47\xea\x8f\x23\x76\x99\xca\x90\x3f\xe2\xda\x88\xbe\x48\xc6\x49\xea\x6d\xed\x54\x57\x91\x29\x6e\xec\x92\xa7\x1d\x31\x96\x71\x42\x8e\x65\x6e\x89\x6f\xa6\x58\x22\xf9\xb5\x89\xe2\xad\x6b\xd5\x43\x5e\x88\x3f\x3e\xee\xe5\x6c\x2d\xbf\x85\xd8\xa8\xf8\x75\x9a\x93\x24\xf6\xf9\xf2\xf8\xe1\x47\x2c\xf1\x6b\x88\x9d\xd8\xc9\x4a\xcd\x1b\x79\x25\x07\x3b\x99\xef\xf0\x2d\x51\x3f\xc8\xc3\xde\x9f\xc9\x8d\x72\x85\xdc\xc1\x0d\x38\x81\xff\x7b\x30\xc3\xcd\xca\xe7\x26\xd3\x67\x07\xa7\x04\x63\x1d\x2b\x3e\x38\x8a\x6f\xb5\x8c\x2b\x6c\xd4\x9a\x6f\xb8\x1e\x35\x9a\x53\xb0\x62\x67\xcf\xbe\xac\x55\xf8\x83\x4e\xb0\x8b\x0d\x47\x9e\xac\xfa\x69\x8c\xf2\x8a\xd8\x90\x0b\x72\x48\x5e\x9b\x4c\xf1\x5a\xf2\x16\x6b\x3c\xb0\x35\x63\x80\xb7\xf0\x0c\xdf\x1b\xe5\x63\x9e\x28\x1e\xf4\x97\xd8\xab\x34\xb6\x35\x8f\xec\xbb\x58\x73\x1b\x21\x07\x87\x1b\xe5\x2d\x7e\x50\x83\x16\xce\x37\xba\x67\x62\xe5\x61\x09\x0f\x4b\xe5\x67\xe2\x6b\xd0\x22\xef\x39\x9e\xd6\xca\x55\x53\x6b\x5c\x72\xfc\x2a\x54\x96\x1a\x9c\xf1\x38\x8d\x43\x2e\x4f\x6a\x34\x0f\xf0\x6e\x87\xdf\x7b\xc5\x47\x5c\x6a\xa7\x67\xe1\x38\x78\xeb\x52\x7d\x86\x23\xf0\x25\x23\xf7\xa9\xae\x37\xde\x17\x6a\x0c\xce\xa2\x07\x5e\xe2\x23\xdc\xcd\x3c\x9e\xb9\x3e\xb0\x99\x6a\x5f\x00\x1b\xf5\x9c\xd7\xda\x3f\xa8\x2d\x6a\x05\x6c\x60\x25\x47\xec\x51\xdb\xd4\x6a\x4c\x2e\x2a\xcd\x49\xe6\x7b\x0e\x3a\x23\xd1\x61\x12\x8d\x49\x5a\xaa\x7f\xf0\x86\xf3\x70\x83\xde\x61\xbc\xaf\xf0\x11\x1e\xb2\x47\x3d\xe0\x0b\x79\x25\xc6\xd4\x4c\x53\x7b\x3e\xa6\x6a\x13\xae\x64\xe8\xf6\x7d\x11\x4e\x11\x03\x78\x40\x0d\xb9\xc6\x73\xd8\xe3\x85\xbf\xd6\xf7\x20\xf8\xb3\xf0\x18\x8c\xe4\xaa\xcc\x7d\x3c\x4a\xe5\x0c\x71\x8a\xfd\x9c\xfe\x09\x9f\xc0\x3b\xc7\xd7\xe3\x9d\xeb\xaf\x50\x3d\xf4\x2d\xf0\x71\x36\xf5\xb6\xc0\x4d\x1f\x24\x4f\xb6\x56\x6c\xc4\xbb\xf0\xe7\xe9\x0d\xe8\xa0\x36\xad\xd5\x9e\x47\x4d\x94\xe4\x86\x7c\xe6\xca\x59\xe3\x7b\x3a\xbf\x60\xa0\x2f\x12\x57\xe3\xfb\x1c\x79\x01\x3b\xb5\x9c\xd2\x5b\x72\xb5\x91\xf8\x71\x53\x29\x47\x63\xa7\x63\x7a\x9a\x33\xca\x9b\x39\xbe\xf4\xb4\x4c\xeb\x6d\xee\xed\x8d\xe7\x5e\xa3\xb5\x53\xed\xf4\xfe\x40\x17\x5c\x80\xe7\xe0\x46\x86\xfe\x59\x7b\x7e\x90\xd3\x9d\xac\x17\xe4\x11\xbb\xe4\xb1\xf6\x7c\x8e\x95\x33\xfb\x5a\x7b\x25\xfd\xc6\x55\x1a\x6b\xea\x94\xde\x99\x47\x9e\x53\x7b\xcd\xbf\x2d\x34\x6f\x33\xc7\x7d\x8e\xe9\x31\xf8\x8b\x1c\xbd\xbf\xf0\x77\x1f\xbe\xd0\x83\xe8\x2f\x19\xb9\x69\x34\xd6\xf4\x54\x6a\x9f\x78\xc3\x3f\x6c\xef\xbd\x1d\xf6\xc8\x2f\x3e\xce\xf9\x77\x5a\xa7\xf8\xcd\x39\xfc\xb0\x4e\x71\xe2\x03\x3c\x49\x0b\xbd\x17\xe8\x01\xf8\x48\x5d\x1a\x7f\x9f\x11\x1b\xe7\x7b\x1a\x38\x88\x23\xb6\xb9\xf3\x96\x3a\x98\xef\xda\x4a\xed\xd2\x37\xe7\xfe\x94\x6b\x0c\xe8\x2d\xb5\xbf\xab\xc8\x05\x5c\x65\x2d\x8f\xb5\x76\xe1\x10\x77\x34\x39\x86\x87\xf4\xa0\x24\x51\x7d\x73\xbf\x8c\x14\x17\x9c\xa3\x9e\x9d\xef\xa1\xa6\xd4\xde\xc3\xdd\x95\x7a\xdf\x88\x75\xee\xb4\xef\x92\xa3\x84\x7a\x8e\xf5\x17\xde\xed\x12\x7f\xaf\x27\x9a\x03\xfc\xb2\xfe\x7d\x03\x7f\xc0\x4c\x3e\x93\x4c\x7b\x18\x0f\x18\xe1\xd8\xdc\x2f\x4b\xed\x23\xf4\xd6\xc2\xf7\xd1\x9d\xbf\xaf\xa9\xbf\x39\xd6\x72\xde\x38\xad\x19\xf2\x6b\x52\xad\x5b\xee\xcf\xe5\x3d\x88\x9e\xcb\x83\x4f\xdc\x7d\xf5\x52\xab\x8d\xe6\x41\xcf\xad\x96\xaf\xa0\xcf\xdf\xb3\xfc\xfb\xf9\x7f\xfb\xee\x59\xde\xe2\x9f\x7c\x37\xc9\x0b\xff\x17\x6f\x6a\xcf\x64\x71\xf5\xe5\x97\xf3\x4a\xd6\x37\xd7\x37\xea\xcf\x85\xb0\xf8\xd7\xf9\x33\xe0\xa9\xc5\xf9\x3b\xe0\xfa\xb1\xf5\x15\xa8\xdf\xfa\x9c\xb9\x7e\x85\xb4\xdd\xbf\x03\x00\x00\xff\xff\x49\x31\x31\x6b\x00\x10\x00\x00")

func bindataGoBytes() ([]byte, error) {
	return bindataRead(
		_bindataGo,
		"bindata.go",
	)
}

func bindataGo() (*asset, error) {
	bytes, err := bindataGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bindata.go", size: 8192, mode: os.FileMode(420), modTime: time.Unix(1460166858, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _buildMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x8e\xb1\x4e\xc3\x30\x18\x84\x77\x3f\xc5\x49\x45\x62\x41\x7d\x00\x06\x24\x24\x98\x3b\x10\xf6\x38\xf1\x25\xb1\x64\xfb\xb7\x62\xff\x34\xe1\xe9\x71\x23\xaa\x6e\x37\xdc\x7d\xdf\x99\xf7\xcc\x0d\x33\x13\x57\x5b\x59\x60\xf1\xeb\x33\x26\x1f\x88\x49\x56\xec\xa2\xd0\x2c\x09\x8e\x39\xc8\xfe\x82\x45\xae\xfc\xe1\x8a\x22\x91\xd5\xc7\xb6\xf0\x15\xa3\x4d\x18\x08\x2d\x9c\x34\xa0\x0a\x0a\x09\x6e\x76\xac\x61\xc7\x75\xb1\xf5\xb9\xd5\xd2\x18\xd4\xd1\xb5\x80\xba\xf8\xf2\x70\x38\x0e\x3a\xcf\x3e\xcd\xc8\xba\x66\x29\x2c\x67\x74\x0b\xd1\xdb\xdb\xb5\x41\x7d\x70\x3d\x46\x89\xd1\x26\x07\xd1\x9a\xb5\x96\x86\xe0\xf1\xb4\xc9\xbe\xba\x8f\xcb\x77\x77\xa0\x0e\xf0\x3f\xe5\x6c\xcc\xe9\x84\xcf\xcd\xc6\x1c\x58\x8c\xb9\x1c\xcb\xfb\xa8\x71\xce\x2d\xbe\x1a\xd3\xf7\x7d\x59\xcc\x13\x1e\xb6\x86\x12\xbc\xdd\x2b\xb7\x82\xf9\x0b\x00\x00\xff\xff\xda\x69\xc7\xac\x27\x01\x00\x00")

func buildMdBytes() ([]byte, error) {
	return bindataRead(
		_buildMd,
		"build.md",
	)
}

func buildMd() (*asset, error) {
	bytes, err := buildMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "build.md", size: 295, mode: os.FileMode(420), modTime: time.Unix(1454192858, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deleteMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x90\x31\x4f\xc3\x30\x14\x84\xf7\xf7\x2b\x4e\x2a\x03\x48\x4d\xd9\xbb\xa0\x4a\xc0\x2f\x80\x81\x2d\x4e\xfa\xdc\x58\x72\xf2\x2c\x3f\xa7\x69\xf8\xf5\xd8\x49\x04\x4b\x07\x26\x0f\x7e\x77\xf7\xdd\xd1\x29\xf0\x0d\xc6\x7b\x99\x14\xb3\x8c\x48\x82\x33\x7b\x4e\x0c\x3b\x0e\x6d\x72\x32\xe8\x1e\x9d\x4c\x7c\xe5\x08\x97\x30\x39\xef\x11\xa2\xf4\x21\xa1\x99\xf3\xad\x35\xa3\x4f\x07\x7c\x2a\x23\x75\x8c\xba\xb2\x7b\x54\x95\x95\xd8\x72\x0d\xeb\xcd\xa5\x58\x4a\x56\x47\x77\x2e\x27\x4e\xd1\x70\x67\xae\x4e\xc6\x78\xc0\x57\x8e\xec\xcd\x8c\x60\x54\xf1\xcd\x31\x9f\x46\xf4\x12\xff\xe2\x31\x98\x9e\xf5\x40\xb4\xdb\xe1\xed\x66\xfa\xe0\x59\x89\x5e\x57\xc6\x0c\x9e\x89\x52\xb7\x11\x1d\x89\xea\xba\xd6\x8e\x1e\x60\x4a\xaf\xb5\x09\x7d\x64\x2e\x2b\xa5\xa3\x1b\x2e\x6b\x83\x86\xb7\xcf\x73\xd6\x00\x15\x1a\x13\x97\xd7\x8a\x10\x9d\x72\x7e\x19\x43\xc7\xc8\x2f\x78\x9c\x59\x9f\x07\x79\x3a\x16\x73\xa2\xf7\x4c\xb8\x4d\x24\x76\x21\xf8\x5d\xea\x7e\x3e\x2a\x7b\x4f\xa9\x81\x5b\x67\x5d\xfb\x0f\x79\xa1\x5a\x08\x8b\xcd\x4f\x00\x00\x00\xff\xff\x98\x12\x03\xcb\xb3\x01\x00\x00")

func deleteMdBytes() ([]byte, error) {
	return bindataRead(
		_deleteMd,
		"delete.md",
	)
}

func deleteMd() (*asset, error) {
	bytes, err := deleteMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "delete.md", size: 435, mode: os.FileMode(420), modTime: time.Unix(1454192861, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deployMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x92\x3b\x8f\x14\x31\x10\x84\x73\xff\x8a\xd2\x1d\x12\xc9\xb1\x97\x43\xb4\x02\x02\x24\x44\x02\x12\xe9\xf4\xda\xed\x5b\x83\x5f\xf2\x63\x6f\x27\xe1\xb7\xd3\x9e\x7d\xcc\x81\x16\xc2\xe9\x76\x7d\xd5\x5d\x3d\xea\x5b\x82\xe1\xec\xd3\x8c\x14\x19\xa9\x20\xa4\xc2\xb0\x3d\xea\xe6\x52\xac\x20\xef\x31\xa7\x8e\xc8\x6c\xd0\xe4\x71\x82\xab\x28\x3d\x62\xa2\xcc\xc7\xb3\x78\xda\x60\xbb\x7e\x89\x4a\x18\xce\x70\xc8\xa9\x71\x6c\xef\x40\xd8\x75\xe7\xcd\x90\xea\xc2\xd4\xd8\x28\x2b\x5e\x4c\x7a\x7f\xf5\x7a\x00\x45\x73\xc2\x64\x2e\xd2\x0e\xc2\x81\xde\xb3\xfe\x59\x7b\x18\xde\x95\x85\x6a\xd1\xf6\x7c\x36\x92\x91\x2e\x6a\x04\x6a\xf2\xb6\x2e\x5d\x9f\x34\xf9\x93\xe5\xc3\x50\xd4\xa4\x5c\x7b\x5d\x11\x53\xbb\x2a\x37\x4a\x6d\x6d\xe3\x72\x59\x7f\x31\x7e\x76\xb2\xae\xf6\x4c\xb1\x67\x24\xbf\xe2\x45\x7c\xe0\x52\x97\x48\x6a\x93\x88\x8c\xe4\x85\xed\xf7\xaf\xf8\x4c\x61\x67\x08\xa2\x39\xb8\xf8\x24\x55\x3f\xc3\xf2\xf3\x06\x5f\x7a\xd8\x09\x3e\x59\x14\x6e\xe4\xa2\x48\x2e\x08\xa5\x29\x62\xc7\xa8\x99\xb5\xb3\x4e\x3a\x2e\x22\x97\xf4\x83\x75\x1b\x37\xb8\x2e\xa5\x53\xb4\xee\xa9\x17\x1a\x5f\x32\xf1\x27\xbb\x1c\x23\x17\xb6\x82\x96\x48\x04\xc2\xc7\xec\x9d\x76\x6d\xe9\x0c\x70\xa6\x5a\x6f\x5e\x13\x91\xc2\x48\x28\xfd\x75\x3b\xa5\xee\xef\xf1\xf1\x48\x21\x7b\xae\x4a\x7d\x38\x05\x32\x2e\xbf\xfe\x07\x32\xe0\x48\x56\xf7\x52\xe4\xa2\x30\xae\xc8\xac\xa9\xcc\x6f\x95\x9a\xa6\xa9\xee\xd5\x2b\xbc\x60\x8e\xda\xff\x41\x57\x00\xee\x7e\x3d\x1a\x3e\x3c\x86\x99\x72\xbe\xbb\x8d\xc3\x9b\xf7\x78\xf1\xea\x0f\xfa\x39\x43\xbd\x5a\xfc\x83\x41\xbd\xdd\x2a\x49\xc1\x2d\xc0\xdf\x01\x00\x00\xff\xff\x11\x80\x91\xb6\x0b\x03\x00\x00")

func deployMdBytes() ([]byte, error) {
	return bindataRead(
		_deployMd,
		"deploy.md",
	)
}

func deployMd() (*asset, error) {
	bytes, err := deployMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "deploy.md", size: 779, mode: os.FileMode(420), modTime: time.Unix(1455238914, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _docsGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x57\xdf\x6f\xdb\x38\x12\x7e\xb6\xff\x8a\xa9\x8b\x16\x52\x6b\x2b\xed\x15\x87\x03\x02\xe4\x21\xe9\x5d\xae\x01\xfa\x6b\x9b\x76\xbb\x40\xb3\xd8\xd2\xd2\xd8\xe6\x9a\x22\xb5\x24\x65\x37\x28\xf2\xbf\xef\x0c\x45\x4b\xb2\xe5\x74\x17\xdb\x07\x87\x1e\x7e\x33\xf3\x71\xf8\xcd\xd0\x3d\x39\x59\x9a\xd3\x25\x6a\xb4\xc2\x23\x2c\xcd\x6c\x2e\x75\x21\xbc\x80\x59\xb5\x5e\x42\x61\x72\x07\xd9\x78\x7c\x72\x02\xef\x45\xbe\x16\x4b\x6c\x4c\xa6\xf6\x55\xed\x1d\xe4\x46\x19\x8b\x05\x94\xc2\xae\x0b\xb3\xd5\xb0\x30\x16\x04\x2c\xe5\x06\x35\x78\x53\xc9\x3c\x1b\x57\x3d\xc7\xf1\x58\x96\x95\xb1\x1e\x92\xf1\x68\x32\xbf\xf5\xe8\x26\xb4\x58\x94\x9e\xff\x48\xc3\x9f\xce\x5b\xa9\x97\x64\xa7\xf5\x52\xfa\x55\x3d\xcf\x72\x53\x12\x4b\x25\xf4\x72\x46\xcb\xd2\x68\x4e\x77\xb2\xcb\x39\xd9\x07\x96\xd2\xe7\x2b\x54\x6a\x45\x2e\xb3\xad\xb1\xc5\xd6\x8a\xea\x30\x9a\xa8\xf0\x5b\xf3\x11\x4e\x40\xd9\xd2\x70\xc8\x8a\x89\x9a\x05\x73\xad\x4b\xd4\x5e\x78\x69\x74\x36\xf6\xb7\x15\x36\x7b\xc4\xae\xce\x3d\x7c\x1f\x8f\xde\x8a\x32\x7c\x25\xb2\xe3\xd1\xa5\x54\xed\x97\xbb\x36\x92\x83\xf9\x2d\x10\x03\xb4\xd9\x78\x23\x6c\xb4\x9d\xc1\x97\x5f\x79\x45\x31\xbe\x4f\xae\xb4\xf3\x42\xa9\x90\x67\x32\x85\x89\xec\x7d\xcf\xca\x62\x72\x37\x65\xd4\xf9\xe7\x6b\xc8\xa9\xce\xc4\x48\x0a\xe5\x18\x28\xb6\x6e\xd6\x33\x75\xd8\xeb\xc0\xb0\x66\x2a\x50\x59\xf3\x3b\xe6\x3e\x38\xec\xd6\xc7\x91\x8b\x5a\xe7\x9c\x33\x40\xdb\x2f\x1d\xf6\xbf\x58\x29\x73\x3b\x40\x16\xc1\xdc\xc1\xae\xf4\xc6\xac\x07\x28\xc9\x56\xec\x50\xaf\xa5\xf3\x03\x90\x22\x63\x3f\x9f\xc2\x21\xa6\x60\x6b\x2f\xd0\x45\x2d\x55\x31\x40\xcd\xd9\xda\x81\x3e\x18\xa5\x18\x33\x27\x1d\xc2\x06\xad\xdb\xe1\x2c\x6d\xb0\xb1\x83\x5e\xc6\x30\xb0\x32\x66\x1d\x30\x61\xd1\x01\x7e\x96\xb8\xe5\x58\xca\x2c\x63\x0f\x04\xea\x66\x79\x04\x53\x22\xe9\x21\x0f\x51\xe2\xb2\xc3\xbc\xb7\xb8\x89\xb0\x2d\xa9\x12\x0a\x7b\x3b\xb3\x75\x50\x00\x2d\x69\xd5\x41\xff\xa7\x37\xd2\x92\xe4\xe9\xa2\x81\x44\x24\xc5\x5c\x61\x08\x8a\x7a\xd3\xa1\xde\x91\xec\x9b\x7a\xc9\xb8\x2d\x97\x9a\x5a\xb3\x43\x7c\xd2\xa4\x43\x12\x97\x0e\x05\xf3\x2b\xd2\xeb\x4a\x96\x8c\xe4\xbf\x43\xfa\x7b\x2d\x10\x88\x99\xfe\x09\x3e\x55\x4b\x2b\x42\xa8\x73\x6a\x23\xde\xaf\x83\xa5\x97\xf1\xf2\xfc\xa7\xa0\x26\xf1\x47\xff\xea\xf5\x3a\x5e\xb7\x6e\x0b\xdb\x74\xcc\x07\x24\x6f\x0b\x16\x49\x92\xda\x01\x75\xc1\x3e\x07\x10\x64\x04\x47\x29\x55\xd3\x8c\xd9\x98\xaf\x3d\xfa\x25\x29\x48\x93\xc5\x18\xd4\x5a\xdc\x6f\x52\x43\x98\x31\xd9\x45\xbd\x58\xa0\xa5\x19\xc0\xe3\xe9\xb7\x69\xd3\xca\xa7\x67\x60\x69\xa4\x60\x6c\x4b\xf2\x19\x49\x9d\x7d\xb6\xd2\xe3\x75\xe8\xe4\x84\xe6\x52\x76\x5d\xd1\xd2\x2f\x92\xc9\x8d\x7e\x08\x8f\xdc\x0d\x97\x22\x24\xe7\xfe\x4f\xd3\x9e\x53\xf2\xa6\x76\xfe\xdc\x39\xf4\x49\x00\xf0\x4c\x60\x00\x9d\x6e\x54\x16\x9c\x6e\x37\xb1\xb2\xb7\xb8\x4d\xda\x2f\xbf\xbc\xfa\xf8\xe6\xf5\xbb\x20\xa6\x84\x3a\x12\xd3\x69\x0f\x68\x16\x24\x52\xb3\x6d\x36\x28\xd8\x86\xe3\x3c\xb6\xc8\x97\x89\xf6\xfb\xdd\x78\xe4\xd8\xb2\xc9\x36\xd2\x49\x9f\x94\x45\xf6\x5e\x58\x87\x09\x91\xba\xe0\xa3\x27\x29\x7b\x35\x35\x8d\x03\xca\x71\xfa\x58\x34\x97\xc6\xe2\xd3\xd0\x67\x81\x35\x08\x78\x0b\x5e\x96\x54\xb7\xa6\xc0\xcd\x5e\xe2\xe2\xee\x14\x34\x99\x7c\xba\x03\x53\xe1\x24\x73\xd8\x45\xff\x80\x15\x0a\x9f\x4c\x00\xa8\x54\xba\xcb\x2e\xe1\x69\x1f\xa3\x44\x8e\x89\x23\x25\x84\x92\xf2\xe7\x53\x39\x85\xd9\xf3\x1d\xa3\xdd\x19\xc3\x93\xe2\xd1\x96\x52\x0b\x15\x9b\x2e\x4e\xe4\x16\xd2\x4d\x65\xa9\xe9\xfc\x82\x84\x58\xad\x60\x6e\x8c\x62\x0b\x8f\x1b\x08\xff\x3a\x8b\x5e\x37\x96\xbd\x99\x1d\x6a\x08\x5f\x3d\x0d\x2b\xed\xbe\xc6\xd3\x27\x16\x9e\xec\x12\xa5\x0d\x24\x69\x10\x34\xc7\xdb\x8b\xfa\xc8\x96\x14\xda\x22\xa5\x4c\x26\xaa\xcd\x77\x52\x8b\x8e\xac\x35\x07\x4f\xc9\xda\xdc\x5b\xf0\x4e\x7c\x10\x4b\x2c\x57\x47\xa9\xd9\x25\x5a\x3f\x60\x14\x03\xc0\x21\x9f\xee\x8a\xdc\x96\xdf\x45\xf0\x59\xc2\xa5\x0b\xf4\x72\xe1\x10\x9e\xb4\x2e\x6d\xe1\xde\x55\xa8\x4f\x89\xa1\xcd\xfa\xd5\x3c\x03\xd6\x20\x9b\x9b\xeb\x9c\x4c\xee\x8f\xf0\x52\x19\x87\xc7\x42\x2c\xe8\xa9\xea\xc7\xb8\xd1\xc3\x28\x2f\x4d\x81\x17\xca\xe4\xeb\xd3\x0e\x78\xd0\x89\xb1\x0f\xa3\x30\xe9\x4c\x47\xbc\x53\x5a\x6a\x4f\xfb\x53\xf8\x17\xf7\xc0\x41\x96\x4b\xd4\x39\xfe\xa3\x0c\xc1\xf3\x2f\xa2\xbf\xc2\x30\x1b\x77\x95\xd4\xac\x80\xbd\x20\x3d\x40\x9a\xbd\x7a\x8d\x1b\x54\xf7\x72\x01\x9a\x3b\x70\xf3\xec\xc5\x8b\x2f\x8f\x0a\x1e\xd8\x87\x8d\xf6\x30\xf4\xd9\xb4\xf9\x31\x46\xc3\x4e\xd1\xa8\xb8\x8f\x51\x77\x33\xed\x0d\x84\xc8\xcf\xca\x63\x57\x41\x73\xd0\x74\xa7\x68\x5d\xd8\xe1\x79\x79\x1f\x7c\x98\xa2\x49\x30\xc4\x5f\xd4\x8a\xde\x73\x6e\xcf\xbe\xe4\x42\xbb\x0e\xd4\x76\x8c\x5e\xe7\xbf\x27\xb8\x18\xe0\xef\x68\x8d\xa1\x57\x1e\xcb\xc3\x23\x02\xcc\xe0\x18\x5a\xaf\xf7\x99\xd2\x18\x39\xb8\xd8\x1d\x86\x6e\xd5\xe2\xe2\x87\xed\xc2\x52\xbd\xd2\xf4\x10\x06\xe6\x6e\xa0\x91\x6e\xbf\x55\xdb\x7d\x1a\x89\xe2\x20\xd5\xc6\x5a\xb7\x6a\xf8\xbf\x15\xb7\x24\x99\xa1\x20\x3e\xe2\x37\x7f\x3c\x2f\xef\x74\x19\xf9\x85\x5b\x40\x7b\xdc\x07\x67\x74\x94\x30\xc0\x46\xfc\x53\x76\x8f\x06\xc9\x34\x79\xe4\x52\x96\xe8\xb4\xf5\xe0\x27\xb2\x5f\x2d\x2e\x44\x78\x13\xdb\x57\x69\x40\xed\xa0\x28\x71\x48\xee\x77\x61\x5b\x98\x15\xfd\xd8\xa3\x69\x98\xf6\x88\x76\x13\xe7\xf1\x63\x78\xd0\x4a\xa2\x25\x1d\xbb\x7a\xf7\x9f\x03\x7a\xbe\x45\x15\x9f\x7c\x22\xfe\x9f\x7f\x53\x2f\x3d\x4f\x87\x2c\x0b\x5c\x88\x5a\xf9\xd3\xfd\x4b\xbd\xa3\x49\xfd\x67\x00\x00\x00\xff\xff\x16\x79\xd2\xc6\x45\x0d\x00\x00")

func docsGoBytes() ([]byte, error) {
	return bindataRead(
		_docsGo,
		"docs.go",
	)
}

func docsGo() (*asset, error) {
	bytes, err := docsGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "docs.go", size: 3397, mode: os.FileMode(420), modTime: time.Unix(1454782105, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _docsMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x8f\x51\x6e\xc3\x20\x10\x44\xff\x39\xc5\x48\xf9\x69\xa5\x36\x55\xaf\xd0\x33\xf8\x00\x20\x58\xc7\x28\x86\x25\x0b\xd4\xf6\xed\x0b\xb4\x75\x24\x7f\xd8\xcf\x33\x3b\x33\x6a\x5a\x08\xda\x24\xda\xe1\xd8\x66\x0d\xcb\x21\x98\xe8\xb0\x52\xc9\x38\xb8\x42\xc8\x38\x94\xc5\xe7\x2e\xa8\x81\x62\x31\xc5\x73\xc4\x2c\x1c\x1a\xa7\xa7\xc3\x47\xba\xe2\xeb\x80\xa3\xd9\xd4\xb5\xc0\xb7\x27\x23\xf9\x44\x0e\x3e\x16\x1e\x6a\xbd\x52\xce\x2f\x9f\xaf\x1a\xc9\xdc\x48\x90\x3b\x36\x65\x44\x59\x13\x91\x48\x66\x96\x00\x6e\x2f\x23\x28\xb7\xc3\x77\x42\xb6\xc2\x6b\x8b\xb8\x81\x9b\x89\x8c\xd8\xa5\x7f\x9c\x2d\x0a\x49\xf0\xd1\xac\x57\xa5\x2e\x17\x4c\x3e\x65\xa5\xde\x31\x1d\xa9\x45\x7e\x68\xf4\x82\xbf\x2e\x18\xdc\xe9\xd8\x58\xdc\xdb\xa0\x49\x5a\x21\xb4\x59\xad\x4c\xeb\xf8\x27\xea\x27\xff\xf7\x9e\x77\xa2\xee\x8a\x6f\x4f\xdb\xf8\x1f\x69\x2f\x60\x6b\xab\x08\x45\x4b\xe0\xb9\xaf\x10\x3c\x2a\xc9\x71\x9a\xea\x30\xf5\xb1\xa8\xe9\xa4\xee\x49\x1d\x6f\xf1\xe4\x8f\xc1\x69\xf7\x45\xfd\x04\x00\x00\xff\xff\xf3\x5e\xe3\x49\x9b\x01\x00\x00")

func docsMdBytes() ([]byte, error) {
	return bindataRead(
		_docsMd,
		"docs.md",
	)
}

func docsMd() (*asset, error) {
	bytes, err := docsMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "docs.md", size: 411, mode: os.FileMode(420), modTime: time.Unix(1459213029, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dryrunMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x55\x4d\x6b\xdc\x30\x10\xbd\xeb\x57\x0c\x4e\x20\x2d\x89\x43\x13\x08\x94\x2d\x14\x16\x9a\x42\xa1\xf4\x92\x40\x8f\xb1\x62\x8f\xd7\x4a\x65\xc9\x95\xe4\xf5\xfa\x92\xdf\xde\x27\xd9\xd9\x7c\x6d\xd3\x36\x3d\xec\xc1\x9a\xd1\x9b\x37\xef\x8d\x66\xc5\xb2\xe3\x0d\x69\x0e\x9e\x46\xdb\x53\xc7\xae\xb6\xae\x25\x49\x59\xe5\x46\x72\xbd\xc9\xc8\xd6\x24\xcd\x48\x16\x31\x19\x94\x35\x34\xa8\xd0\x50\x68\x98\x8a\x3c\x47\x56\x8e\xac\x82\x6a\x2d\x57\x47\x48\xac\xc8\x58\xaa\xd8\x07\xd7\x97\x41\xad\x99\x96\xdf\x2f\xa8\x6c\xa4\x59\xb1\xc7\x4d\xad\xe9\x9a\xa9\x95\x15\x1f\x0b\xb1\xb7\x47\xdf\x6c\x48\xa0\x42\x7c\x9a\xea\x79\xea\x3d\x27\xf4\xda\x6a\x6d\x07\x65\x56\xe4\xc7\xf6\xda\x6a\xbf\x10\x22\xa7\xe2\xb0\x20\xc7\xde\xf6\xae\xe4\x2d\x5e\xe9\x58\x06\xae\x62\x38\xdf\x11\x76\xdc\xda\xf5\x14\xbe\xdd\x11\xee\xbb\x2a\xdd\x8e\x7c\xce\x37\xb2\xed\x34\x7b\x21\x3e\x5b\x47\x3c\x7d\x91\xaa\x93\x3a\x8d\x5c\xcf\xd4\x7a\x53\x46\xd6\x9e\xb2\xda\xda\x2c\xb5\x9d\x5d\x4b\x97\xd1\xd0\xa8\xb2\x99\x12\x0d\xaf\xd9\x01\x9f\x0d\xf4\xe8\xb4\x1d\xb9\x3a\x8a\x30\x07\xa8\xea\xf9\x69\x8f\xb6\x0f\x5d\x1f\x8e\xe9\xb2\x51\x7e\xfe\x00\xd3\x0e\x64\xd9\xc0\x9c\x94\xac\x8c\xd4\x38\xfc\xd9\x43\x5e\x9f\x44\xa4\x60\xa3\xc0\x1f\x20\x7a\x50\x68\xa9\xb1\xc3\x23\x82\x64\x64\x0b\xdd\xa5\x63\x02\x54\xad\x36\x5c\xdd\xdb\xd7\x39\x7b\xc3\x65\x38\xf0\xf4\x26\x0b\x80\x04\x8d\xec\x6d\x44\x44\xea\x1a\x55\xa9\x04\x3b\xe5\x63\x9f\x93\xb3\x52\x2b\xe9\x67\xb8\xbb\xea\xad\x54\x26\xe0\x97\x10\xb3\xb2\x77\x0e\x37\x33\xb0\xd4\x8c\xdc\xe9\x0a\xac\x2e\x8a\xc2\x37\x62\x9f\x64\x1c\xb7\x49\x0e\xda\x4e\x8f\x10\x44\x87\xf7\x9c\x67\x2e\x57\x10\x14\x01\x82\x9a\xa6\xd2\xec\x16\x74\x15\x6f\x5f\x29\x53\xf1\xe6\x78\x3a\x4c\x71\x20\x04\xd5\xf2\x02\x22\x54\x7c\xe3\xd3\x59\x0b\xcb\xdd\xb8\xa0\x93\xd3\xf7\xe9\x3b\x26\x40\xd5\x05\x9d\x4d\xc5\x12\xaf\x67\x95\xd2\xe9\x82\xe6\x2e\xd2\x11\x3c\x8c\x0a\x00\xe9\x37\x2c\x31\x00\x7f\xaa\xf8\x9a\x26\x76\xb0\xbc\xab\xf4\x32\x4b\x28\x2d\xc4\x97\x69\x60\x07\x76\xc9\x24\x80\x53\xf1\x50\x7a\x40\x15\x47\xd1\x32\xf3\x3c\xf6\xe0\x51\xcb\x15\x9c\x7d\x32\xb4\x32\x90\x35\x7a\x9c\xe7\xdd\x30\x57\x7e\xbe\x09\x8e\x8b\xff\x73\xfa\x1f\x9d\x7c\xa4\xeb\x23\x45\x5f\xed\x71\x52\xef\x42\xb5\x4a\x4b\x87\x26\x43\x7c\x8d\xa5\x34\x69\x4d\x78\x3c\x9e\xf9\x75\x28\x1e\xf0\x3a\x4c\xad\x56\xfd\xbc\x14\xe7\x15\xf7\x37\x02\xdc\xbe\xc2\xd7\xfd\xaf\xcb\xcb\xf3\x8b\xcb\xe9\xfa\x54\xf9\xa5\x09\xa4\xfc\x23\x9d\x9d\x9c\x3e\x11\x2c\x9e\x9e\xbc\x9b\x7a\x5c\x62\x81\xa0\x0a\xc0\x63\x57\xb1\xcd\xc1\xba\x1f\x1e\x93\xe1\x40\x44\xa7\xb5\xbd\x5d\xf9\x78\xff\x0d\x46\x09\x9b\x42\xa2\x23\xfc\x5b\xf0\x9d\x0a\xcf\xfb\x4d\xd1\x6d\xbf\x94\xd7\x91\x73\xbe\xdb\xf3\xdd\x91\xd8\x4f\xe4\xf8\x2b\x00\x00\xff\xff\x9f\xaa\x2b\x78\x9c\x06\x00\x00")

func dryrunMdBytes() ([]byte, error) {
	return bindataRead(
		_dryrunMd,
		"dryrun.md",
	)
}

func dryrunMd() (*asset, error) {
	bytes, err := dryrunMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dryrun.md", size: 1692, mode: os.FileMode(420), modTime: time.Unix(1454192881, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _envMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x92\xd1\x6b\xdb\x30\x10\xc6\xdf\xf5\x57\x1c\xee\x60\x1b\x24\x86\xa4\x7b\x2a\xec\x21\x85\xcc\x2d\xcb\x92\x41\x33\x46\x9f\x66\xc5\xbe\xd8\xca\x64\x9d\xb1\xa4\x24\xde\xe8\xff\xbe\x93\x9c\x74\xa1\x10\xf0\x83\x38\x9f\xf4\xfd\xbe\xef\x4e\xcc\x7e\x3e\xc1\x42\x36\x9b\x52\x42\x49\x68\xc1\x90\x03\xeb\xdb\x96\x3a\x07\x68\xf6\xaa\x23\xd3\xa0\x71\xb0\x97\x9d\x92\x1b\xcd\x1d\xe4\x1d\xd0\x16\x5c\x8d\xb0\xa1\xe3\x08\x2c\xf1\x59\x59\xe0\x4f\xc2\x16\xa5\xf3\x1d\x42\xdb\xd1\x5e\x95\x58\xc2\xa6\x87\x59\x8b\xc7\x54\x88\x35\x5f\xc8\xc7\x76\x04\xe3\xb1\x45\x97\xc3\x56\xcb\x0a\xa4\xd6\x74\xb0\xd0\x93\x07\x47\xc0\xf5\x2b\xa2\x87\x5a\x15\x35\x48\x7e\x19\x8f\x2d\x59\x7e\xd8\x51\x44\xd8\x7a\x53\x38\x45\x06\xa4\x83\xce\x1b\xa7\x1a\x4c\xe1\x0b\x75\xdc\x27\x9b\x56\x23\x28\x03\x4b\x2a\x31\xdd\x59\xf0\x56\x99\x0a\x72\x66\x2b\xd0\xda\x94\x95\xd2\xe5\xec\xdb\x3c\x07\x6e\xe7\xb6\x8c\xce\x1d\x64\xd3\x0c\x1d\xff\xff\x90\x84\x86\xe4\x63\x9e\xc2\x3d\xd6\xca\x94\x51\xd3\x16\x68\x98\x29\xba\xae\xf8\xd8\x49\x87\xc1\x7c\x1e\x9f\xdc\x59\x32\xec\x4e\xb1\xf6\x40\x1d\xb2\x31\x3b\x2c\x1c\x53\x2b\xc3\xdc\xec\xb6\x7b\x05\x7f\x6f\xe1\x8f\x6a\x87\x7e\xdf\xb2\x91\x12\x5b\x4d\x7d\x0a\xcf\x9c\x49\x23\x7b\x66\xc2\x41\x2a\x06\xd6\x78\xed\x54\xf0\x15\x9c\x5a\x8e\xf5\xe6\x06\xe6\x83\x55\x2b\xc4\xa5\xf1\x38\x45\xbe\x1b\xb2\xad\x65\xc9\x7c\x0b\xaa\x2a\xdd\x83\xa6\x0a\x0a\xd2\x9a\x89\xb8\x5d\xb2\x29\xe5\xc0\x20\x96\xec\xc1\xc0\xec\xfb\x23\x67\xfb\x1b\xcd\x28\xde\x6c\x54\x55\xbb\x13\x13\x1c\x94\xab\xef\x84\xc8\xf3\x5c\xbc\x03\xc9\x63\x3d\xff\x18\x5b\x58\xac\xb2\x6c\xf1\xfc\x6b\xbd\xfa\x3a\x5f\x7e\x8e\x0f\x04\xa1\xf1\xab\x50\xbc\x25\x56\xdd\x1b\xae\x3d\xfe\xb7\x74\x8e\xe4\x3c\xa9\x90\x75\xa6\xdc\x83\xdf\x04\xaa\x13\x0f\x27\x72\x90\xbc\x1b\x9c\xe3\xb0\x0a\x6c\x6c\x90\xe3\x0a\xaf\xd3\x69\x37\x9b\x6b\x9c\xd9\xe3\xfa\xe1\xc7\xfd\x25\xe7\x40\xf6\xd4\x62\xa1\xb6\xfd\x95\xfd\xe3\xf5\xe0\xb5\x09\x43\x8c\xf3\x0d\x1b\x73\xa6\x8d\x85\x41\x2d\x9c\xc4\x5f\x01\x90\x5c\xbc\x92\xdc\x41\x28\x71\xf1\x32\x22\xae\x26\x93\xe9\xed\xe4\xd3\x74\x32\x9d\x4e\x6e\xf9\x98\x70\xd3\x8b\x78\x89\x34\xff\x02\x00\x00\xff\xff\x8b\xb2\x73\x46\x97\x03\x00\x00")

func envMdBytes() ([]byte, error) {
	return bindataRead(
		_envMd,
		"env.md",
	)
}

func envMd() (*asset, error) {
	bytes, err := envMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "env.md", size: 919, mode: os.FileMode(420), modTime: time.Unix(1459213032, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _faqMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x55\x4d\x6f\xdc\x36\x10\xbd\xef\xaf\x18\xc0\x87\xa6\xc0\x7a\x7d\xef\x25\x30\x52\x34\x75\x51\xa4\x07\x1b\xe8\x21\xc8\x81\x22\x47\x12\x53\x8a\xa3\xf2\x63\x37\xfb\xef\xf3\x86\xd4\x7e\x18\x30\xe0\x95\x38\x9c\x79\xef\xcd\x9b\xd1\xee\xe1\x81\xfe\x94\x13\x39\xa1\xb3\x54\x5a\x4c\x34\x13\xd3\x52\x43\xf1\x6b\x60\xe2\x78\xf4\x49\xe2\xc2\xb1\xe4\x8f\xbb\xdd\x4b\xf9\x25\xd3\xec\xa7\x39\x9c\x29\xb1\x95\x05\x07\x8e\x1d\x15\x21\x9b\xd8\x14\xa6\xcc\xab\x49\xfa\xe3\xf9\xdf\x57\x32\xd6\x4a\xc5\x4d\x1a\x25\x51\x2e\x66\xf2\x71\x22\x13\x1d\xad\x49\x5c\xb5\xc5\x4b\x7c\x57\xe1\x40\x6f\xb3\xcf\x7a\x7a\xf4\x8e\x33\xa1\x00\x40\x20\x99\xcf\x12\x4c\x0b\x97\x11\x85\xb3\xd4\x64\x39\xef\x5b\x2e\x13\x82\x9c\x72\x43\x0f\x18\x6c\xb2\x07\xb8\x2d\x05\x4d\xc9\xc4\x1a\x4c\x52\x28\x9c\x73\x8b\xb8\x2b\x48\x26\x23\xdd\xff\xd5\x27\x76\x07\x7a\x65\xa6\xaf\x8a\x1b\x5c\x1c\x8e\xbd\x09\xf9\xdb\x87\x07\x73\xca\x8f\x77\x6f\x7e\xed\x6c\xea\xba\x86\x73\xe7\x73\xe1\xa9\x55\x47\x1f\xf8\xb0\xbb\xa8\x0a\x32\x45\x19\x39\x3f\x8e\x9c\x90\x00\x8f\x88\x7f\xe5\x74\xe4\x14\x00\x08\x9a\xde\x1e\xa8\x66\x90\xfe\x14\xa4\xba\x3f\x24\x2d\x9d\x30\x10\x0f\x22\x25\x97\x64\xd6\x7b\xea\xa7\xd9\xdb\x99\x2c\xb2\x0d\x4a\x13\xe2\x37\x5c\x13\x97\xa2\xa8\xa0\x76\x2a\xec\xf6\x34\xd4\xa2\x30\x26\x8e\x9c\x20\xd5\x99\x5a\xa5\x24\x43\xcd\x1b\x9a\xaf\x6f\x9c\x92\xc1\xe5\xe5\xdb\x87\xb9\x94\x35\xff\xf6\xf4\x34\xf9\x32\xd7\xe1\x80\x06\x3c\x99\x95\x7f\x3c\x0d\x02\x5e\x69\x45\x13\xb8\xf3\x6f\x46\xd1\x42\x3e\x8e\xc9\x00\x1d\xda\x59\x13\x23\x63\x92\x3a\xcd\xa2\x55\xa1\x6f\xf0\x23\x17\xbf\xf0\x81\xc0\xa8\x6b\x01\xa8\x19\xbc\x9e\x91\x16\xae\x03\xe1\x28\x85\x6c\x4d\x2a\xcf\x5d\xe7\x2e\x54\x37\x4b\x6a\xbb\x36\x7b\x2c\xe6\x4c\x16\xc0\xe1\x53\x0f\x7d\x66\xa6\xb1\xb6\xda\x8a\x2b\xc0\x9c\xe5\xa6\xd8\x0a\x88\x7b\xbc\xfc\x8f\x91\x1a\xd1\xa0\x2b\xab\xea\x6a\x82\x86\x2f\x68\xd5\x73\x69\x39\x14\xa5\xba\xeb\x94\x7c\x13\xf0\xae\x2d\x57\x94\xda\x74\x49\xf8\x3f\xfb\x65\xd1\xa0\x56\x11\x48\x2a\x10\xe6\xad\x25\x06\x48\xee\x82\x31\x1d\x11\x9d\x3c\x2a\x80\xe1\x4c\x7f\x9b\x65\x70\x66\x8f\x53\x0d\xcd\xf4\x59\xf4\xfe\xe1\x4e\x8e\x26\x92\x26\x56\x47\xab\x8e\x00\xa5\x00\x07\xf9\x01\xb4\x6f\xf8\x75\x55\x3b\x93\x5f\x56\xc9\x28\x81\xcc\x6c\x90\x11\xea\x7d\x67\x5b\x1a\x88\xab\xe9\xf6\x5a\xe8\xc4\x21\xe8\xff\xa3\x49\xcd\xb6\x23\x1c\xa3\x29\x00\x85\xb9\x15\x70\x62\xab\xca\xdc\x7d\xa7\x08\xde\xa5\x84\x11\x35\xf2\x34\xc3\x69\x0c\x7b\x70\xba\x50\xcc\x87\x77\x2e\x06\x7c\x15\xb1\x70\x84\xa1\xb5\xd4\x17\x71\x7c\xf8\x8e\x4a\x8d\xe4\xdd\x31\x1a\xf2\x59\xfa\xb4\xbc\xe4\x2d\x58\x91\x6c\x17\x9a\xce\x94\x31\xde\x1f\x37\xe2\xfa\xdc\x17\x0d\x46\x17\x26\xf0\xa1\xed\x12\x1d\xed\x3d\x6e\xd6\x7c\x77\x3a\xf2\xe9\x71\xae\xd1\x61\x72\x69\xf1\x21\xf8\x8c\x85\x85\x7d\xe1\x38\xc0\x40\x63\xb3\x23\x3c\xe3\x13\xe6\xc0\xc7\xa3\xd8\xc6\x1b\x5b\xa0\x0e\x19\x2b\x41\x87\xd5\x62\x60\xda\xce\x40\xb6\x1a\xfb\xbe\x52\x65\x37\x3f\xe1\x60\xf6\xa5\x2f\x00\xed\x30\xf6\x15\xd4\xf3\x18\xb4\x3d\xd5\xd8\xb4\xe8\xee\xdc\xae\x42\x3e\xe8\xcf\x09\x33\x08\xfe\xd8\xae\x70\xe8\x38\x7a\xdb\x15\xf8\x5d\xba\xaf\x00\xf7\x66\xa9\xd9\x20\xad\x89\x7a\x63\xf1\xbd\x33\xf9\x9d\x18\xd7\xb9\x91\x95\x53\x63\xde\x65\xfc\xeb\xf5\x9f\x2f\x24\x47\x6d\x52\x71\x70\x11\x16\x01\x5b\x83\x05\xd3\xed\xe4\xfb\xc2\x5c\x74\x09\xe8\x4b\x04\x61\x09\x74\x3f\xcb\xa4\x83\xdd\x41\x7d\x02\xb9\x97\xcb\x57\xe1\x42\x44\x69\xc1\x04\xdd\xb2\xde\xf5\x01\x6e\xba\x03\xda\xa5\xc7\xfa\x12\x3b\xdc\x4f\xb1\x7f\x1f\x30\xb0\x0e\x94\x03\x4f\xc6\x62\x7e\x4d\x56\xeb\xa1\xdc\x2d\x69\x4f\xd1\xbc\x2c\xdd\x5e\x32\x96\x13\xf4\xee\xcb\x63\x11\x60\xed\x2c\x5b\x78\x2b\x94\xb8\x59\xdc\x72\x97\x3a\xa0\x8b\xe1\x96\x72\x4f\x7e\xc4\x1a\xba\xc1\x19\xbd\xa2\x69\x51\xe1\xac\x8e\x81\x09\x55\x07\xac\x51\x0d\xd8\x34\x24\x33\xa1\x8b\x6a\x8b\xcb\xca\xc1\xdf\x70\x7e\xec\x74\xda\x47\x07\x2f\xd0\xe1\xab\x0d\xfa\x3a\x3a\xec\x7e\x06\x00\x00\xff\xff\x46\x55\x05\x7f\x4e\x07\x00\x00")

func faqMdBytes() ([]byte, error) {
	return bindataRead(
		_faqMd,
		"faq.md",
	)
}

func faqMd() (*asset, error) {
	bytes, err := faqMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "faq.md", size: 1870, mode: os.FileMode(420), modTime: time.Unix(1454779349, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _functionsMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x55\x4d\x6f\xdc\x46\x0c\xbd\xcf\xaf\x20\xe4\x43\x13\x60\xb3\x8d\xed\x06\x6d\xf6\x66\x24\x75\x61\x20\x49\x83\xb6\x48\xd1\x53\x34\x2b\x51\xbb\xe3\xce\x87\x3a\x1f\xeb\xa8\x45\xff\x7b\xc9\x19\x49\xab\x75\xdd\x26\xbe\x18\x5e\x8a\x7c\x7c\x7c\x8f\xa2\xc4\x15\x74\xc9\x36\x51\x39\x0b\x2a\x40\xdc\x23\x04\x23\xb5\xc6\x10\x21\x59\x15\x41\x59\xb8\xea\xf1\xd3\x1a\x16\x89\x1e\x7b\x8f\x01\x6d\x0c\x20\xe9\xf1\xaf\x3f\xc3\x1b\x69\xb6\xad\x9c\x33\xd6\x42\x5c\x8f\xff\x06\x30\x29\x30\x4c\xa3\x53\x8b\x20\x23\x68\x94\x14\x70\x96\x3a\xb9\xe4\x1b\x84\x4e\x69\x84\x27\x3e\xd9\xa8\x0c\x42\x8b\x3d\xda\x96\xc0\x9f\xae\x20\xa4\x66\x0f\x32\x50\x75\x4b\x14\x6e\x03\x38\x0f\x46\x2a\xbb\xde\xb9\x35\xfc\xd8\x33\x3e\x71\x1d\x60\xd1\xf9\x36\x10\xc1\x8c\x68\xe4\x00\x5b\x84\x5e\xcb\x06\x5b\x9e\x83\x87\xfb\x38\x25\x7e\x15\xa0\x55\x1e\x9b\xe8\xfc\xf0\x91\x3a\xf5\xd8\xa8\x6e\x50\x76\x47\x04\xa2\x54\x3a\xcc\xcd\xb9\xcc\xa0\xa1\x3c\xa0\x66\xae\x91\x91\xe0\x88\x08\xc7\x79\xf6\x9b\xab\xb7\xe0\x9d\xc6\x35\xdc\x74\x79\x2c\x26\xe9\x3c\xce\x9c\x02\x2b\x6b\x54\x08\x8c\xfe\x20\xd5\xc1\xa5\x22\x53\xef\xdd\x41\xb5\x2c\x42\x27\x93\x26\x7d\xbb\xb1\x91\xc7\x3f\x12\xd1\x6d\x29\x1f\x75\xcb\x8a\x70\xee\x2d\xf1\x2f\x30\x4f\x02\x22\x54\xef\x4b\x28\x54\xb9\x8e\xbc\xc1\x4f\xd2\xf4\x1a\x9f\x92\x21\x67\x67\xf0\xca\xd9\x4e\xed\x92\x97\xdc\x5e\x88\xba\xae\xb9\x56\xfc\x25\x00\xaa\x16\x43\xe3\x55\x96\xb4\xda\x40\xf5\xce\xb5\xc8\x82\x8f\x00\x33\xe9\x6a\xc5\xc9\xa3\x57\x9c\x68\x29\xf1\x36\x94\x70\x51\x89\xa2\xe7\x17\xdf\xe5\x00\x27\xb9\x14\x29\xf2\xa2\xd4\x91\x4c\x5c\x24\xbd\xdd\xc8\xbb\xb0\x51\xd2\x6c\x36\x17\x2f\x2f\x5f\x3c\xbf\x3c\x7f\xf9\xed\xe5\xc5\x37\x1b\xce\xf8\x5a\xe7\x6d\xaa\xc4\xdf\x4c\x31\x33\xbf\xce\x53\xd3\x56\x95\xe9\x8d\xf4\xbf\x93\x16\x64\x4e\xad\xec\x1e\xbd\x22\x4b\xea\xd9\xf0\xa2\xe1\x6c\xf9\x89\x4e\x59\x6e\x65\x43\x44\xd9\x66\x51\xce\x60\x31\xb9\x10\xaf\x8f\x3f\xc0\x75\xb9\x7e\xf6\x0b\x7e\xd9\xab\xec\x65\x0a\xa5\x39\x3f\x5d\x54\xe7\x77\x65\x7e\x19\x08\xfd\x19\xc4\xa1\xc7\x0d\xd4\x21\x7a\xf2\xbe\xa6\xc0\xe4\x63\x69\x3d\xea\x28\xc4\x4f\xe3\xf2\x7f\x51\xcb\xe9\x4d\x39\x69\xb7\xe2\xb5\xbb\xdb\xa3\x9d\x5b\xac\xe6\xba\xe8\x78\xa9\xd1\x1b\x45\xdb\x19\xf7\xf4\x0e\x32\xcc\x64\x71\xd8\x2b\x43\x7f\x5c\xd2\x2d\xcb\xc7\x15\x6b\xb8\x26\xb4\xc9\xfb\x8c\x1a\x99\x48\x5e\x3e\x86\xad\x76\x4e\x4b\xbb\xab\x56\x19\xa9\x91\xd6\x59\xd5\x48\x3d\x53\xcb\x6d\x39\x6f\x5c\x0f\xda\x45\xa2\x5f\x5a\xf1\x40\x96\x1d\xc9\x16\x11\x37\x86\xf8\x53\xf5\xd9\x9b\xcf\xa8\xf6\x0c\x66\xbf\x8b\x82\x65\xe5\x84\x78\x7b\xff\x05\x1d\x71\x27\x25\x57\xac\x96\xc1\x9d\xdc\x0e\x11\xc3\xb2\x0b\x51\xf8\xff\x16\xe3\x12\x1f\x4f\xda\x14\x61\xc8\x80\xe5\x15\x7f\x14\x22\x2f\xb9\x10\x8b\xbb\xc9\x81\x22\xfc\x23\xc7\x47\x7b\x50\xde\x59\x43\xe7\x52\x88\xef\x8f\x3f\xe0\x20\xbd\x92\x5b\x7d\x3a\xaa\xdb\xb2\xec\xf5\x03\x84\xf8\xe4\x59\x6c\x3f\xa0\x0f\x3c\x8d\x10\xef\x92\xd9\xa2\xe7\x7d\x9c\x9e\xc1\xe2\x72\x1e\xc6\x3c\x3a\x77\xcb\x8d\xe7\x03\x68\x5d\x1c\x8f\xa9\xa2\x9a\x9a\xae\xb9\x76\x43\x0d\x8d\x33\x86\x77\xe0\x4e\x69\xcd\x5f\x80\x03\xc2\xf9\xf3\x19\xe7\x01\xf5\xee\x31\x3c\xf4\x8d\x10\x04\x4f\x97\xd2\x1f\x3f\x44\x16\x91\xae\x01\x59\x2d\x9b\x06\x43\x20\xae\xe5\x93\x92\xef\xa3\x84\x0f\xef\x5f\xb1\x41\x89\x70\x06\xd8\x79\x97\xfa\x90\x17\x31\xa4\xad\x45\x3a\xae\x7b\xa6\x41\xd5\x8b\xa3\xb1\x86\xdf\xee\xdf\xe2\xd3\x4f\xd6\x09\x5c\x46\xcb\xe1\x8c\xf8\x25\x5a\xe7\x51\xd6\x13\xcc\x0f\x99\x94\x10\x6f\x14\xe3\x77\xff\x62\x7b\xf3\x3a\x2c\x30\xa5\xf7\x72\xf8\x4f\xc8\x32\xd4\x02\x6b\x9c\xf2\xb3\x18\xff\x04\x00\x00\xff\xff\x27\x71\xcc\x27\x04\x08\x00\x00")

func functionsMdBytes() ([]byte, error) {
	return bindataRead(
		_functionsMd,
		"functions.md",
	)
}

func functionsMd() (*asset, error) {
	bytes, err := functionsMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "functions.md", size: 2052, mode: os.FileMode(420), modTime: time.Unix(1459213032, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gettingStartedMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x57\xef\x72\xdb\xb8\x11\xff\x8e\xa7\xd8\xea\xda\x58\xea\x58\x94\x25\x27\x71\xab\xc6\x9d\x51\x1c\x39\xf1\xd4\xb1\x6f\x64\xe5\x6e\xae\x99\x4e\x08\x91\x90\x84\x98\x24\x58\x12\x94\xad\x78\xdc\xb9\x77\xe8\x1b\xf4\xd1\xee\x49\xfa\x5b\x80\xb4\x14\xe7\x2e\xe7\x74\xfa\x21\x9d\xa9\x3f\xd8\xe6\x62\xb1\xfb\xdb\x7f\x3f\x00\xe2\xc2\xaa\x9c\x66\x6b\x2a\xf9\xaf\xce\x4a\x5b\x54\x91\xd5\x26\x2b\x69\x6e\x0a\x5a\x28\x6b\x75\xb6\xc0\xaa\x2c\xac\x8a\xe9\x4a\xdb\x25\x8d\x72\x75\x4d\x32\x8b\x69\xf4\xfd\x05\x95\xaa\x58\xe9\x48\x95\x81\x10\xdf\x7c\x53\x4b\x6c\x95\x0b\xf1\x5c\xc1\x80\xa2\xb5\xa9\xd8\x4a\x63\x61\xd7\x09\xae\x74\x92\x50\xa6\x60\xd0\x1a\xaf\x4f\xa5\x49\x15\xd9\x25\x9c\x95\x64\x32\xfc\xa7\x9c\xb1\x08\x48\x4c\xa2\x60\xbd\x1f\xd0\x85\x5e\x64\xc0\x88\x3d\xbc\xfc\x96\xd7\x4f\x46\xaf\xe9\xc8\xeb\xfc\xad\xbd\xb4\x36\x2f\x87\xbd\x5e\xb3\x49\x5e\x95\x81\x4c\xe5\x07\x93\x05\x91\x49\x7b\x5a\xa6\xbd\x25\xdc\x7c\xc3\xbf\x3a\x62\x10\xd0\xa8\x2c\xd9\xa4\xa4\xb7\x15\xe2\x78\xb8\x01\xd6\x2e\x3b\x3e\x1b\x0c\xa5\x80\x32\x85\xc0\x73\x2a\xd3\x59\x2c\x8f\xab\x24\x19\x45\x48\x4a\x19\x8a\xfd\x80\x8e\x0a\x25\xad\x82\x97\x4c\x5d\xd1\xdb\xe2\x8b\xa0\xb2\x36\x3c\x71\x2d\x90\xb8\x82\xbc\x03\x9a\x57\x99\xaf\x52\x20\xce\x8c\x55\xc3\x4f\xe4\x14\x9b\x6c\xc7\xfa\x1c\xcb\x6c\x4d\xb9\x49\x74\xb4\xde\xa5\x59\x65\x49\xc6\x31\xd7\x94\x81\x7b\x31\x85\x47\x89\xa9\xe2\xef\xa5\x8d\x96\xa7\x66\x51\x6e\xe1\xf7\xa5\x92\x49\x62\xae\x28\x31\xd8\x24\x75\x82\xcd\x81\x78\x8c\xb8\xb0\xf7\xb2\x29\xd6\x84\x53\xc0\x4d\x11\x99\x7c\xbd\x91\x8c\x26\x67\x9b\xce\x88\x0a\x15\xab\xcc\x6a\x99\x94\x42\xfc\x60\xaa\x9d\xa6\x0b\x5c\x68\xf7\x34\xb8\x2f\xa8\xca\x03\x82\x22\x2d\xe5\x0a\xdd\x71\x65\xc8\xe4\x2e\xbc\x5d\xb7\xca\x5e\xe6\x86\xb1\x71\x3c\x2a\x5b\xe9\xc2\x64\x29\xf6\xd3\x4a\x16\x5a\xce\x90\xba\xa1\x10\x5d\x57\x99\x77\xa3\xa3\xa3\xf1\xc5\xc5\xbb\xbf\x8c\x7f\x08\x9d\x2b\x19\x45\xa6\x82\xaa\x74\x81\xd2\xa5\x5a\x37\x9a\x17\xe3\xa3\xc9\x78\xfa\xa9\x66\xa9\x00\xcf\x6e\x6b\x4e\xc6\x2f\x4f\xce\xcf\xbc\x56\xa1\x16\x40\x26\xc4\x79\x51\x23\xa7\x7f\xf4\xb8\xac\xbd\xed\x98\x56\x5a\x52\x08\x21\xf7\xf5\x5c\x2f\xaa\x42\x85\xbb\x2e\x6b\xe8\xa8\x87\x84\xc3\xf3\x12\x2d\x8d\x81\xf6\xd5\x52\x47\x4b\xca\x0b\x33\xd7\xc8\x33\xe4\x30\xb1\x89\xf6\xdb\xc9\xf9\xf1\xc9\xe9\x38\xbc\x53\xc8\x64\xda\x68\xfd\x32\x7a\x6a\x03\x5b\xb7\x8c\x2f\xbb\x0b\x83\x0e\x82\xbf\xcc\x58\xac\xc9\xf8\x2e\x18\x87\xbb\xe3\x4a\x7a\x66\x62\x15\xbc\x47\x29\x3f\x6a\x70\xc7\x0e\xf0\xfa\x5e\x45\x16\x78\xc2\x30\x2c\x97\x22\xbd\x8c\x75\x41\xe9\xba\x96\xd3\xa3\x47\x14\xc5\x9b\x6f\x61\x4d\xe5\x83\xe1\x2f\xd8\x44\x22\xfd\x96\x6e\xbe\xe9\xe9\x5e\x95\xe7\xaa\x88\x24\x22\xf0\xfa\x3f\xb3\xd2\xd3\x59\xac\xae\x19\x15\x1c\x0b\x31\x8a\xe3\x7b\x69\x45\x0a\xb6\xdd\x04\xf4\x52\xaf\x7c\xea\x1b\x6c\xd2\xe7\xca\xe7\x57\x97\x9c\xb1\xd8\x6f\x53\x73\x7d\xed\xcd\xdd\x8d\x99\xce\xea\xd1\x43\x19\x29\x56\x65\x54\x68\xd7\xa1\xbe\xaa\x8d\x1e\x56\xe6\xb2\x4a\xac\x27\xd5\x54\xa5\xa6\xc0\x2c\x5a\x9d\x2a\xc3\xf3\x58\x53\x29\xcf\x7a\x40\xd3\x9a\xf9\x1c\xa7\xa4\x55\x69\x69\xa6\x78\x2e\x24\xf3\x2f\xdc\xf1\xda\x5c\x17\xa5\xf5\x2e\xb6\xa6\xd8\x8d\x2a\x5a\x65\x0d\x77\xb9\xca\xdc\x90\xd7\xd3\xc9\x53\x06\x5e\x9d\xfb\x49\x6b\x60\xb5\xcb\x0e\x73\x20\x90\xa7\x3a\xd3\x69\x95\xf2\x32\x0f\x25\x52\x31\x43\xbf\xc1\xa4\xcc\xec\x86\xe1\x90\x04\x3f\x88\x10\x7c\x86\x32\x6a\x38\x1c\x2a\x28\x63\xe1\xe8\x82\xcb\xe1\xca\x7a\x23\x88\x5a\x9c\xe0\xd6\x90\x5a\x77\x0d\xd0\xda\x65\xf1\x56\xfe\x78\xb5\xee\x2f\x52\xd7\x32\xcd\x93\xbb\x02\x79\x5d\x9f\x44\xa8\xf5\x07\x7f\x70\x82\x3a\x9b\x90\x3c\x71\xdf\x8c\x98\xad\x3c\x9b\x9c\x9f\x8e\x99\x87\xe8\xd5\x78\x32\xfe\x73\x4b\xdc\xfa\xd6\xa8\x9b\xd6\x95\x93\xd3\xb9\x29\x16\x92\x1c\x06\xbd\xcf\x35\x57\x38\xac\x03\x12\x0d\x7f\x23\xd0\xf6\x8e\x3b\xe3\x38\xeb\xcd\xde\x9d\x8e\x50\xd7\xb9\x29\x6c\x19\x2c\x51\x2c\xc4\x70\xb8\x49\xbe\xda\xa5\xc8\x5e\x77\x88\x33\xf2\x91\x19\xc4\xc9\x89\x74\x24\xb0\xc2\xf8\x0f\xe9\x77\xef\x77\x76\x09\x47\x16\xf1\x8e\xa0\xac\x90\x68\x15\xb7\x6f\x50\xec\xa4\x02\xf9\xab\xc0\xfd\x13\x58\xf3\x86\xa1\x1e\x01\x6a\xbb\x43\xb7\x9d\x26\xd4\x17\x2a\x4f\xcc\x9a\x74\x3d\x8f\xe2\xb7\x24\x79\x48\x63\x27\x86\x51\xfa\xe9\xc7\x7f\xd5\x5f\xec\xf4\xfe\x4f\x83\xf8\x70\x33\x7f\xf5\x9e\xa6\x2d\x3f\xe8\x9c\xda\x83\x83\x27\xf4\xbc\xf3\xb0\x3d\xdb\x49\x7a\xa8\x1f\xde\x23\x13\x2d\xcb\x87\x61\xf3\xf1\x00\xdc\x03\xe2\x71\x13\x7f\x78\xd7\x8d\xef\x36\x0b\x2b\x1c\xf4\xac\xda\xff\x34\x4d\x9e\x0a\x3f\x0b\xc5\x65\x1f\x4c\xf9\xd2\x7c\x5d\x24\x99\x4a\x9d\x05\x0b\xf3\x7f\x8e\xfc\x9f\xe7\xc8\x97\xe6\x2b\xa2\xc7\xba\xad\xc0\x8e\x30\x81\xf6\xca\x65\x74\x29\x17\xa8\x10\xe4\x42\xe8\x94\x99\x90\xda\xec\x5d\x65\x91\xe1\xdc\xf7\x38\xde\x16\x4b\xf0\xf0\xe0\xbb\x7f\x4b\xf0\xc7\x02\x17\xeb\x6a\xe6\x6e\xc2\xcc\x54\xbd\x85\xe9\xf2\xdf\x96\xc0\xc5\xc3\xae\x73\x45\xaf\x91\x44\xb6\xec\x9f\x2b\x8e\x42\xbf\x63\x0a\x24\x6f\x86\x5c\x1e\x87\x2d\x47\x8b\xad\x10\x31\x09\xc6\xeb\x80\xb4\x3d\xe3\xb2\xbd\xe0\x95\x23\xe5\x63\x2c\xb5\x79\xbd\xed\xe8\x96\x5c\xcf\x4f\xe4\x55\xed\xc4\xd1\x34\xfd\xde\x6d\xc0\x53\xc3\xaa\x6b\xdb\xa1\x36\x9e\x21\xaa\x98\xcb\x48\xdd\xdc\x82\x9a\x8b\xc2\x14\xde\x2e\x71\x77\x51\x5a\x2e\x1a\x8c\xc2\x09\xf5\x9c\x95\x68\x78\xe8\xad\xbf\xc9\x52\x59\x94\x4b\x99\x78\x97\xbb\xf4\x08\x3b\x3a\x7f\x72\x3a\xbf\x39\xa4\x4c\x27\xb5\x31\xc2\xed\xcb\x56\x45\xc6\x22\xe7\xc7\x49\x6f\xbd\xd1\x7a\xe9\x51\xed\xe9\xa6\xce\x61\x30\xf5\xe7\x40\x1b\x36\x03\x97\x96\x0e\x30\xc2\x00\x36\xb9\x43\xc1\x57\xf8\xf3\xc7\x02\x6d\x38\xf0\xd7\x7e\xfe\x6b\x27\xc8\x7e\xd0\xa7\xd7\xcd\x11\xf2\xb5\x9c\x20\x5f\x48\xf5\x27\xd9\xca\x5c\x6e\x83\xc3\xfd\x78\x6a\x30\x34\x10\x33\xfb\xdf\x61\xae\x69\xc4\x0f\x97\x7b\x05\xb9\x27\xb0\xce\x72\xd0\xdd\x4f\x3f\xfe\xb3\x4e\x0d\x05\xbd\x42\xfd\xbd\x52\xa5\xe7\x62\xc7\x67\x78\xc0\x31\x93\x56\x69\xba\xae\x6f\x08\xf7\xb8\xc3\x09\x31\xdd\xbe\x87\xea\x31\xc0\xb0\x4f\xcd\x4c\xbb\x91\x3e\x46\x27\x29\xcb\x83\x77\xdb\x0c\xfc\x08\x60\x18\x65\x24\xfd\x94\xbb\x27\xa4\x22\x83\x13\x10\x53\x85\x61\xc5\x9b\x0b\x04\x2f\xf1\x56\x72\x64\xb7\x0d\x0a\xa4\x17\xba\xde\xf1\x61\x86\xfe\x9d\xf3\x2c\xfc\xb8\xb1\xea\x1c\x6c\x1a\xeb\xd9\x47\x56\xc4\x4d\x03\xb4\x35\x3d\x7f\x7e\x42\xd3\x57\x63\x3a\x1e\x4f\xf0\x14\x6b\xd5\x10\x4f\xbc\x81\xbb\x67\x77\xd8\x3d\x0d\x09\x0c\x1a\x76\xbb\x20\x51\xb0\xea\x3c\x91\xee\xf4\x5a\x69\xe5\x9f\xab\x60\x3c\x4e\xa7\x4c\x0c\x2a\xb2\x79\xae\xab\x32\x47\x61\xd4\xcf\xc2\xf3\xb6\x7e\x19\xe5\xc5\x74\x34\x99\xd2\xc4\x8b\x4e\xe2\x21\x3d\x8d\xe3\xf8\xf1\x5e\xff\x69\x77\x36\x8f\xe6\xdd\x7e\x5f\x3d\xe9\xce\xf6\xfa\xb3\xae\x3a\x78\x3a\xff\xe3\xfe\x20\x9e\x1f\xec\x29\xfa\xce\xdf\x23\xc0\xc7\x62\xc0\xba\x7b\xfd\xee\x60\x6f\x3a\xd8\x1f\x3e\x1e\x0c\xfb\x83\xe0\x60\xf0\xf4\xaf\xf4\x30\x4b\xf4\xe9\xf5\xf0\xe6\x56\x8c\xcf\x5e\x7c\x29\x26\x31\x19\x7f\x7b\xfe\x1f\x84\x42\x2f\xaa\xc2\xf5\xc8\x90\x06\xc1\x7e\x1f\x5c\x47\xcf\x71\xaa\xa2\x81\x37\x0b\xfd\xbd\x3d\x96\x13\x48\x90\xcf\x21\xba\xd0\x1f\x94\x3b\x8b\x30\xdf\xf4\x5a\x5e\x37\xf2\x37\xb8\x37\xc0\xcc\x01\x8b\xe9\xd7\x1b\x00\xf3\xf5\x42\x25\xca\xde\x9b\xaf\xa3\x44\xc9\x8c\x5f\xdc\x3c\x1c\x05\x2c\xd7\xe7\xef\xe6\x0a\x52\xd3\xcc\x7d\xa2\x83\x29\x2e\x38\x4e\xe1\x68\x6b\xea\x6b\x07\x0f\x61\x31\xb6\xf6\xef\x00\x00\x00\xff\xff\xba\xfb\x1d\xb6\x43\x13\x00\x00")

func gettingStartedMdBytes() ([]byte, error) {
	return bindataRead(
		_gettingStartedMd,
		"getting-started.md",
	)
}

func gettingStartedMd() (*asset, error) {
	bytes, err := gettingStartedMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "getting-started.md", size: 4931, mode: os.FileMode(420), modTime: time.Unix(1454192909, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _hooksMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x52\xcb\x6e\x1b\x31\x0c\xbc\xeb\x2b\x08\xe7\x90\x06\xf0\xfa\x54\xf4\x50\x20\x87\x34\x68\xed\x9e\x0c\xd4\x3f\x60\x59\x4b\x79\x95\x6a\x45\x41\x0f\xc4\x46\x91\x7f\x2f\x29\xd9\xee\x03\xb9\x08\x90\xa8\x19\x0e\x67\xa8\x9e\x22\x9e\x20\xd7\x18\x29\x95\x0c\x65\x42\x08\x54\x1c\x05\x20\x0b\x13\xd1\xcf\xbc\x84\xd7\xc9\x99\x09\xb4\xf7\xf4\x0a\x67\xaa\x50\x08\xf0\x84\xa6\x16\x84\x3c\xa1\xf7\x60\x68\x9e\x75\x18\x05\x9e\xa8\x1e\x27\xaa\x45\x69\xb0\x35\x18\x61\xba\xcf\xe0\x9d\x45\x73\x36\x1e\x57\xf0\x8d\x12\xa3\xf5\x1c\x3d\x36\xb2\x59\x9f\xa1\x66\x94\xce\x7c\xb6\x8e\xd2\x20\xd5\x00\x05\x33\x4b\xe2\xff\xde\x85\xe2\xc2\x11\x0e\x68\x29\x21\x53\x8f\x18\x3d\x9d\x97\x52\xe3\xbf\x25\xe9\x90\xa3\x63\xc2\x4c\x35\x19\x64\x3d\x23\x32\xa9\x40\xbe\xe8\x03\xfa\x25\x3c\x93\xb5\x88\x3b\x93\x5c\x2c\x0d\x96\xdd\xec\xbc\x4e\x2b\xa5\x36\xad\xa5\xc8\x38\x30\x41\x44\xe3\xac\xc3\x11\x5c\x80\x98\xe8\x05\x4d\x59\xbd\x64\xb1\x23\xdd\x06\x6a\x0f\x2b\xe8\x40\x9d\xf0\xea\x46\x03\x89\x83\x7f\x26\x57\xa3\x4b\x4c\x41\x89\xc5\xb2\xaf\xad\x7a\xa1\x65\x5b\x6e\x45\x96\xf1\x3d\x14\x4c\x81\x4d\x3e\x43\x8b\x84\x3d\xc9\xff\x9b\xe2\xc4\xb5\x19\x43\x01\x76\x78\x20\x3b\x70\x7d\x38\xd0\x2d\x3f\x60\x7b\x60\x4d\x5e\xf3\xe0\x9c\x07\x10\xd7\x93\xe2\x74\xc4\x9c\x11\xe4\xbd\xea\x23\x66\x6e\x77\x77\x07\xbb\x0e\xe2\x42\x6b\xa0\xd4\x00\xfb\x43\x75\x7e\xdc\x37\xf7\xc7\x9a\xc4\x40\x0d\xed\x0d\x3e\xb0\x20\x5b\x7d\x6b\xd1\x19\xb9\xfa\x20\x98\x1e\x46\x07\xf5\x84\xe0\x9a\xd0\x3f\x28\x89\x93\x31\xcb\x6b\x9c\x0d\xcc\x3b\xa1\x43\xc7\x6a\xcb\x0e\xbc\x0f\x6d\xbf\x44\x4d\x8d\x17\x39\x3a\x15\x67\xb5\x29\xf9\xa1\xcd\xf2\xb5\x6f\x14\x0f\xb1\xc1\x84\xf7\x7d\x91\xbb\x6f\x4c\x23\xc1\xdc\xdc\xfd\xcb\xa3\x8b\x6d\x6c\xc7\x7e\xbf\x97\x50\xd5\x2f\x05\xb0\x68\xb8\xc5\x67\x90\x0b\x5f\x5b\x43\xbe\x2e\xd6\xdb\xed\xee\x91\xc5\xd7\x13\xac\xb7\x4f\x3f\x9e\x37\x8f\x7a\x1e\x3f\x7d\x84\x23\x5d\x44\x0d\xc4\x7b\xc4\x3b\x20\xc7\xea\x48\x8b\x65\x27\x68\xea\x85\x20\xcd\x30\xd8\x56\x5d\x70\xe5\x4d\xbd\x49\x5f\xf5\x3b\x00\x00\xff\xff\x88\xdd\xdc\x2b\x83\x03\x00\x00")

func hooksMdBytes() ([]byte, error) {
	return bindataRead(
		_hooksMd,
		"hooks.md",
	)
}

func hooksMd() (*asset, error) {
	bytes, err := hooksMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "hooks.md", size: 899, mode: os.FileMode(420), modTime: time.Unix(1454779349, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ignoreMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x90\xc1\x4e\xc3\x30\x10\x44\xef\xfe\x8a\x91\x7a\x28\xa0\xe2\xdc\xcb\x0d\x09\x09\x4e\x7c\x00\x42\x8d\xeb\x6c\x92\xad\x1c\xaf\x65\x6f\xa0\xfd\x7b\x92\xa6\x45\x80\xb8\xd9\xde\x99\x37\xe3\x35\xaf\x49\x59\xa2\x0b\xa8\xad\x4b\x74\xe4\x2e\x4a\xa6\x1a\x2d\x07\x2a\x18\xdc\x09\x7b\x42\x0a\xce\x53\x03\x8e\xd0\x7e\xba\x65\x39\x90\xd7\x75\x41\x16\xd1\x0d\x24\xe3\x93\xb5\x9f\xa6\x25\x91\xe7\x96\x3d\xda\x31\xfa\x19\x8b\x86\xf3\x24\x95\xcc\x54\x2c\x5e\x14\x63\x99\xa8\x6f\xb6\x63\x5d\x82\x90\x9c\x2a\xe5\x88\x56\xf2\xe0\xf4\xfd\xa6\x57\x4d\x65\x5b\x55\x93\xe2\xbe\xf8\xc1\x7a\x19\xaa\x46\x7c\xa9\xbe\x2d\xab\xdd\xc5\xb3\x5b\x3c\xb7\x0f\x70\x21\x5c\x41\x05\x0d\xb5\x1c\xa9\xd9\xc0\x4d\xf8\x4c\xc1\x29\x7f\x10\x54\xfe\x2d\x05\x17\x1b\x44\xd1\x9f\x1f\x03\x6b\xa1\xd0\x5a\x3c\x9e\x66\x98\x1b\x83\x62\x2f\xda\xff\xd9\xd0\xec\xac\xaf\x4c\x7b\x28\x12\xeb\x73\xe4\x32\x6f\xac\x31\xab\x15\x9e\x8e\x6e\x48\x81\x8c\x79\xa6\x4c\xeb\x39\x0e\xb4\x3c\x2d\x3a\x8e\x1d\x3a\x41\x91\x31\x7b\xba\x2c\x7d\x06\xcf\x75\x7e\xb1\x2f\xa5\xb6\xc6\xd4\x75\x6d\xee\x6c\x27\xe7\xc3\x57\x00\x00\x00\xff\xff\x01\x63\x0b\xe0\xbf\x01\x00\x00")

func ignoreMdBytes() ([]byte, error) {
	return bindataRead(
		_ignoreMd,
		"ignore.md",
	)
}

func ignoreMd() (*asset, error) {
	bytes, err := ignoreMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ignore.md", size: 447, mode: os.FileMode(420), modTime: time.Unix(1455556738, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _installationMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8e\x3d\x6a\xc6\x30\x10\x44\x7b\x9d\x62\xcb\x04\x82\xd4\x7f\x37\x08\x04\x5c\xa4\x48\x20\x04\xbc\xb6\x36\x96\x40\x5e\x99\x5d\x09\xdb\x90\xc3\xc7\xbf\x4d\x9a\x29\x06\xe6\xbd\x31\x0d\x43\xf3\x0e\x9f\x90\x05\xde\x22\xd7\xe5\x61\x4c\xdb\xb6\xa6\xaf\x92\x20\x94\x32\xe9\xc3\x39\xc1\xd9\x0e\xb1\x84\xda\x55\x25\xe9\x33\x17\xe2\x62\xfb\x3c\x3a\x9c\x68\x39\x63\x44\x2d\x24\x2e\xb2\x16\x4c\xc9\x6a\x80\x5f\xd0\x70\xb0\x76\xc7\x47\x64\x9f\x67\x85\x2d\x38\x65\xf4\xf0\xd5\x45\x46\x59\xbf\x9f\x6e\xc9\x29\xf8\x47\x15\x4a\x84\x4a\xfa\x6c\x8d\x79\xfd\x01\x4c\x42\xe8\x57\xb8\x2c\xe4\x5f\xa0\x4e\x83\xa0\x27\x98\xb7\xf9\xf5\x7d\x5f\xde\xfd\x51\xfc\x05\x00\x00\xff\xff\x97\x49\xfb\xbc\xe5\x00\x00\x00")

func installationMdBytes() ([]byte, error) {
	return bindataRead(
		_installationMd,
		"installation.md",
	)
}

func installationMd() (*asset, error) {
	bytes, err := installationMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "installation.md", size: 229, mode: os.FileMode(420), modTime: time.Unix(1459213029, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _invokeMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\x4d\x6f\xa3\x48\x10\x3d\x9b\x5f\x51\xf2\x8c\x34\x97\x01\xdb\x60\xfc\xa5\xbd\xf8\xa3\x47\xf1\xac\x3f\x56\x98\x99\x4b\x14\x29\x6d\x28\x0c\x09\xd0\x2c\xdd\x24\xf1\x66\xfd\xdf\xb7\x1b\x5b\x1b\xd8\x8d\xe5\x44\x93\xa3\xab\xba\x5e\xbd\x7a\xaf\x28\x6b\xe3\x0c\x9f\x80\xc6\x31\x7b\xe4\xb0\x67\x05\x08\x06\x51\xfa\xc0\xee\x11\x82\x22\xf5\x44\xc4\x52\x0e\x41\xce\x12\x10\x21\x82\xc7\x92\x84\xa6\xbe\x1e\x47\x29\x7e\x05\x96\xa9\xb4\xac\xdd\x43\x46\x39\x8f\xd2\x1d\x50\xf8\xbe\x59\xaf\x00\x1f\x30\x15\xc0\x72\xe0\x22\x47\x9a\x28\xd0\x8d\x3b\x9b\xaf\x0c\x4d\xfb\xf4\x09\xc8\x13\x4d\xb2\x18\xb9\xa6\xcd\x8f\x9d\x1e\x23\x11\xb2\x42\x00\x4d\x8f\x95\x23\x4d\xbb\xbd\xbd\xe5\xa1\xf6\x19\xa8\xa2\x77\x22\xe4\xb1\x38\x46\x4f\xe8\x5c\x50\xc1\xd5\x8b\x1a\x40\xa5\x73\xa5\x1e\xbd\x90\x81\x9e\xc2\x97\x67\x68\x3e\xd0\xb8\xc0\xe6\x08\x9a\x2e\xdb\x46\xe5\x3c\x01\xe6\x39\x8a\x26\x1c\xbe\xc0\xdf\xb5\x56\x45\x96\x61\xee\x51\x8e\x5a\xad\x6e\x3d\x99\x83\x7b\x45\xe0\x1b\x71\x1c\xe2\xca\xba\x1a\x8b\x52\x26\x0a\x41\x14\xe3\x99\x09\xfe\x85\x85\xdf\x8e\x4c\x8d\x3b\xce\xd2\x1a\x08\x3d\x0e\xc3\x85\x1f\xa5\xe0\xc5\x51\xb6\x65\x34\xf7\xc1\xa7\x82\x56\x40\xb3\xad\x54\x5c\xe0\x7f\x58\xd3\x42\x84\x75\x46\x27\x0b\xe5\x03\x09\xec\x47\x81\x1c\x58\x39\x93\xe5\xec\x4e\x2a\x79\x1e\x50\x9f\x4a\x4b\x45\xd8\x12\xac\x75\x7a\xfb\xff\x1e\x9b\xd2\x5b\xe5\xfa\x31\xc5\x21\xa1\xf7\xea\x67\x52\xc4\x22\x92\x06\x43\x8e\x7f\x16\xc8\x05\xff\x0a\x3b\x4c\x31\xa7\x42\x65\xd5\x24\xc7\x19\xaf\xb3\x90\xa5\xfb\x9b\xeb\xce\xcd\x19\xc3\x0a\x8e\xb9\xd2\xfd\xf9\x39\xa5\x09\x1e\x0e\x27\xa3\xca\xb2\xf3\x86\x9d\xca\x9a\x33\xb2\x58\x12\x07\x96\xe3\xc5\x7a\x45\x9a\x87\x97\xc4\xf7\x29\x38\x84\xfc\x24\x9b\x6a\x70\xf1\x63\x35\x86\x6f\x0b\xe2\x4e\xaf\x88\x23\x13\x86\x61\xbc\x77\x4c\xb9\xbf\x3e\xc8\x3d\xce\x0a\x51\x4e\xaa\x36\x2c\x47\x9e\xc9\x4f\x08\x21\x66\x3b\xfe\x81\x63\x82\xae\x2b\x44\x6d\xe3\x8e\x1d\x17\x9c\x23\x83\xb9\x3f\x02\xab\x8d\x03\xb3\x47\xbb\x3a\xed\x6d\x6d\xbd\xd3\x41\x5b\x1f\x9a\x76\x5f\xf7\x3a\x76\xd7\xc2\xe1\xb6\x6f\x51\x0f\x7e\x62\xce\xe5\x5a\x8c\xe0\xf3\x62\xec\x92\x8d\xab\x91\xd5\xec\xbd\x20\x9a\x43\xfe\x58\xbf\xbf\x77\x63\x56\xa8\x45\x50\xcd\xdb\x46\xdf\x82\x84\x37\x26\x91\xfc\xae\x7d\x78\x49\x74\xda\x6d\x19\x87\xc6\x12\x13\x96\xef\x61\x13\xfd\x85\x32\x68\x0e\x60\x39\x69\x2c\xe9\x13\x9c\xe2\x3f\x38\xfa\xea\xb1\x0c\xbf\xf8\x38\x5d\x2f\x5c\x79\x07\x9c\xab\xf5\xac\x34\xf8\x15\x81\x82\xf6\xd6\xb4\xbc\x0a\x49\xda\xb6\x24\x67\xbf\x67\xf9\xdd\x81\x47\x6d\x8b\xbe\x41\xa0\xcb\x20\xaf\x0a\x74\xb9\xac\x22\x90\x69\xd8\xbd\x5f\x17\x68\x58\xd7\x67\xec\xac\x17\x63\x98\x90\xe9\xef\x67\xd4\xb1\x3b\xd8\xeb\x57\x18\x0e\x86\xe6\x50\x0f\x6c\xcb\xea\x0f\x30\x68\x07\xdd\xfe\x5b\xd4\xb9\x08\xf2\xba\x3a\x17\xcb\x6a\xeb\x63\x9a\x1f\xad\x4e\x79\xe1\x4f\xd7\xbd\x72\x03\xd4\x89\x82\x50\x88\x8c\x8f\x5a\xad\x9d\xbc\x5d\xc5\xd6\x90\xff\x85\xad\x7d\x84\xb1\xcf\x5b\xe5\x97\xaa\xfd\x13\x00\x00\xff\xff\x92\xe5\xb3\xd7\x4b\x07\x00\x00")

func invokeMdBytes() ([]byte, error) {
	return bindataRead(
		_invokeMd,
		"invoke.md",
	)
}

func invokeMd() (*asset, error) {
	bytes, err := invokeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "invoke.md", size: 1867, mode: os.FileMode(420), modTime: time.Unix(1454192919, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _javaMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8e\xb1\x4e\xc4\x30\x10\x44\xfb\x7c\xc5\x48\x34\x20\x91\xa4\xa7\xbb\x16\x41\x03\x12\xb4\xde\xd8\x73\x17\x07\xc7\x0e\xb6\x43\x0e\xbe\x9e\xcd\x5d\x75\xc5\x4a\xab\x9d\x99\x37\x7b\x87\x37\x7e\xaf\x3e\x73\x66\xac\xa5\x69\x0e\x0b\xcf\xe0\x79\xa1\xad\x05\x75\x94\x8a\xdf\xb4\x66\x3c\x7f\xbc\x62\xc9\x69\xd2\x33\x4e\x8c\xcc\x52\x09\xc1\x51\xf5\x49\xf2\x23\x36\x5f\x47\x48\x08\x70\x5c\x18\x1d\xa3\xf5\x2c\xf0\xd1\x86\xd5\xd1\x75\x37\x25\x38\xa6\x7c\xa5\x6a\x14\x35\x61\x4b\xf9\xeb\x4a\xd8\xdb\x9f\x9a\xa6\x85\x11\xdd\x3a\xd5\x0d\x46\x29\xbb\x69\xa0\xe2\x40\x75\x31\xc3\x54\xc9\x27\xd6\xde\x40\x51\x66\x58\x7d\x70\x7d\xf0\x43\xe9\x8d\x66\xf7\xc0\xe1\xf3\x1d\x2f\x32\x0f\x4e\x6e\x3f\xba\x37\x36\xcd\x9d\xcc\xf2\x97\xa2\x6c\xa5\xd3\x69\xc3\xc5\xd7\x4e\xf2\x23\xad\x4d\x99\xe6\xa1\xf9\x0f\x00\x00\xff\xff\x7a\x6d\x57\xa8\x16\x01\x00\x00")

func javaMdBytes() ([]byte, error) {
	return bindataRead(
		_javaMd,
		"java.md",
	)
}

func javaMd() (*asset, error) {
	bytes, err := javaMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "java.md", size: 278, mode: os.FileMode(420), modTime: time.Unix(1460166458, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _linksMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\xd0\x3d\x4e\xc4\x30\x10\x05\xe0\x3e\xa7\x30\x1d\x2e\x12\xf7\x5c\x00\x2a\x84\xb4\x74\x2b\x84\x26\xc9\x93\x37\xb0\xc9\x58\x33\xe3\xec\xc2\xe9\x71\xc2\x6f\x13\xb4\x8d\x0b\xfb\x7d\xd6\x9b\xa9\xaa\xda\xed\x6f\x07\xbb\xcb\xed\xd3\xf5\xc1\x2c\xe9\x4d\x08\x71\xb0\x43\x6e\x9b\x8e\xc7\x40\x09\xe7\xf5\xf0\x4e\x90\x58\x07\x63\x79\x5b\xcc\x83\xf0\x0b\x3a\x73\x38\xd3\x98\x8e\xd0\xff\x75\x30\x01\xc2\x48\x6a\x90\xf0\xfc\x6d\xbc\x3b\x95\xac\x53\xce\xd2\x61\x2d\xc2\xdb\xdf\x44\xae\xbf\x7a\xe4\xc9\x86\x11\x2e\x51\xf7\x4a\x71\x75\xf7\xdc\x63\x5b\x4e\xe5\x75\xdb\x3e\x96\x0e\xa5\xd5\x2f\xb7\xcf\x8b\x1f\xaf\x90\x19\x52\xea\xaa\x5f\xf2\x57\xfb\xdd\xb1\x68\xb7\x33\xb2\xfc\x67\xec\x25\x5a\xf7\x98\x1b\x7a\xcf\x82\x13\xda\xb2\x2b\x68\x33\xc1\x42\x4b\x7d\x44\xa3\x73\xf4\x17\xc5\x7d\xf5\x11\x00\x00\xff\xff\xb4\x01\xe4\xc1\x96\x01\x00\x00")

func linksMdBytes() ([]byte, error) {
	return bindataRead(
		_linksMd,
		"links.md",
	)
}

func linksMd() (*asset, error) {
	bytes, err := linksMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "links.md", size: 406, mode: os.FileMode(420), modTime: time.Unix(1459213032, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _listMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x92\x4b\x6b\xe3\x30\x10\xc7\xef\xfa\x14\x83\xb3\xc7\x75\x36\xb6\x37\xec\x46\xb0\x87\x3d\xf4\xd6\x63\xef\xc9\x24\x1e\xc7\x2a\x7a\x98\x91\x94\xc7\xb7\xaf\x64\xc7\xa5\x0d\x85\x42\xa1\x17\x81\xe6\xf1\x9f\xdf\x3c\xc4\xff\x81\x2e\xe0\xe3\x30\x38\x0e\x1e\xb4\xf2\x41\xd9\x23\xb8\x0e\xba\x68\x0f\x41\x39\xeb\x41\x59\x38\x21\x2b\x17\x3d\xb8\x18\x86\x18\xfc\x4f\x38\x44\x66\xb2\x41\x5f\xa1\x8f\x06\x6d\xd9\xb1\x22\xdb\xa6\x6f\x20\x36\xca\xa2\xbe\x85\x02\xda\x16\x8a\xd0\x25\x01\x5f\xcc\x75\xa0\x73\x9c\x54\x03\x1d\x19\x73\x09\x38\xab\xd0\xc3\x13\x31\x63\xf2\x98\xa5\x10\x8b\x05\x3c\x5c\xd0\x0c\x9a\xbc\x10\x8f\x09\x0a\x50\xeb\x37\x48\x59\x35\xf4\xa4\x18\x0e\xce\x76\xea\x18\x27\x21\x29\xc4\x6e\xb7\xf3\xbd\xf8\x01\x98\xfb\xca\xed\x08\x01\xb0\x47\x4e\x2f\x00\x47\x1b\x94\x21\x09\xd6\xb5\xf4\xec\x47\x9b\x21\xe3\xf8\x2a\xa1\xaa\xff\x9a\xfd\x68\xc9\x21\x89\x5e\xc2\x7a\x8a\x60\xa7\x53\x0a\xb2\x95\x78\xf6\x52\xa1\x91\xb2\xde\x34\xeb\x55\x53\x6d\xfe\x34\xf5\x6f\x99\xfd\xbf\x34\x9a\x7d\x8b\x63\x7c\x9f\xe8\x34\xb1\x4c\x2d\xb6\x74\x59\x4e\xdf\xd1\x73\x9b\x1a\x9c\x88\x7d\xc6\x85\x26\xd3\x75\xce\x7d\x4a\xb7\xae\xea\x7b\xba\x6a\xf5\xed\x78\x55\x9d\xe7\x29\xc4\xeb\x6a\xf2\x21\xcc\x57\xf0\xd1\xb0\xa1\x2c\xa7\x5d\x8b\x6c\xda\xce\x0b\xdb\xa6\x05\xfc\x2b\x66\xc4\x89\x45\x46\x5f\x9e\xc9\x87\xb2\x7e\x8f\x3b\xe7\xc8\x40\xe3\x2d\xe6\xdc\xe2\x4e\x2e\x4d\xec\xcb\x72\x29\xb7\x18\xbb\x7a\x09\x00\x00\xff\xff\x1c\x60\x3a\x0b\xfb\x02\x00\x00")

func listMdBytes() ([]byte, error) {
	return bindataRead(
		_listMd,
		"list.md",
	)
}

func listMd() (*asset, error) {
	bytes, err := listMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "list.md", size: 763, mode: os.FileMode(420), modTime: time.Unix(1459213029, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _logsMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x52\x3d\x8f\xd3\x40\x10\xed\xfd\x2b\x9e\x7c\x14\x20\x5d\x22\x51\xd0\xd0\x01\xe2\x2a\x24\x3a\x10\x9d\xe7\xec\x71\xbc\xd2\x7a\xd7\xda\xd9\x25\xe7\x7f\xcf\x8c\x9d\xec\x71\x10\xe8\xb2\xe3\x79\x6f\xde\x47\x9a\x0f\x0b\x3f\xc1\x09\x5c\xc8\x7c\x4a\x94\x79\xc0\xd9\xe5\x09\x9f\x7c\x2c\xc3\x77\xca\xfd\x84\x2f\xf1\x24\xc8\x11\x3f\x1d\x9f\x91\x27\x46\x2c\x79\x29\x19\x71\xc4\x58\x42\x9f\x5d\x0c\x72\xc4\xc7\x15\x03\x8f\x54\x7c\xde\x76\xbc\x81\xc6\x98\x40\xde\x3f\xaf\x29\xb7\x3e\x1f\x19\x83\x93\xc5\xd3\xca\xc3\x3d\x4a\xf0\x2c\x82\x18\x94\x38\x61\x8e\x89\xeb\x3e\x02\xcd\x2c\x20\x1d\x2d\x24\xa2\xda\x54\x46\x47\x26\xd9\xf8\xbb\x23\x7e\xc4\x82\x99\x56\xbd\x22\x11\xb2\x70\xef\xc6\x75\xbb\x3f\x14\x35\x63\x14\xaa\x32\xbb\x99\xd5\x20\xce\x93\x53\x3b\xf6\x75\x72\x92\x63\x5a\xcd\x78\x55\x82\xd7\x17\xfd\x9b\xd9\x77\x98\x5d\x28\x99\xe5\xcd\x3d\x48\x75\xb3\xea\x26\x73\xe4\x7d\x3c\xbb\x70\x02\x85\x01\xa3\xf3\x99\x93\xbd\x12\x8b\x21\x8f\x4d\x73\x77\x87\xcf\x4f\x34\x2f\x6a\xaa\x69\xbe\x59\x64\xbf\x27\xb0\xe7\x62\x09\xab\x9e\x2d\x27\x92\xfc\x7c\xec\x7d\xd3\x74\x5d\x27\x53\xf3\x0a\xd5\xa5\x4d\x2e\x4c\x35\xd4\xb6\x2c\x0b\xa7\x9e\x84\xdb\x4d\x48\xab\xa2\xae\xef\x1a\xf6\x2d\x32\x54\x20\x2a\x64\x3f\xf0\xb0\x39\xb3\x0a\x32\x39\x7f\xed\xf0\xda\xf5\x5f\x4d\xde\x24\x3f\x8c\x2f\xb8\xe8\xd2\x88\xeb\x2b\xee\x1f\x30\xe5\x8f\x2f\xa0\x7b\xb2\x5a\xca\xe3\xaa\xd5\x67\xfd\x1d\xd0\x72\x4a\x31\xb5\xff\xa1\xc0\xe1\xb0\x03\xb1\xad\xde\xdc\x78\xb8\x7c\xdb\xae\x7d\xdd\xdd\xd5\x22\xa6\x58\x92\xfd\x63\x0c\x71\xfb\xce\x41\x5c\xe8\x19\x6f\xff\x18\x8b\x4d\x8c\xf2\x57\x00\x00\x00\xff\xff\x37\x0a\x8c\xf1\x51\x03\x00\x00")

func logsMdBytes() ([]byte, error) {
	return bindataRead(
		_logsMd,
		"logs.md",
	)
}

func logsMd() (*asset, error) {
	bytes, err := logsMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "logs.md", size: 849, mode: os.FileMode(420), modTime: time.Unix(1459213032, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x91\xcd\xae\xda\x30\x10\x85\xf7\x7e\x8a\x23\xd1\x25\x54\x89\x49\x58\xb0\xef\x1b\x54\x5d\xc7\x75\x06\x32\xaa\x7f\x52\xff\x04\x78\xfb\x3a\x51\x40\xb0\xa0\x57\xf7\xee\xec\x99\x39\xc7\xdf\xf1\x88\x9f\x03\xa1\x53\x23\x5d\x61\x29\x05\xd6\xb1\x83\xf6\xd6\x2a\xd7\x63\x0c\x7e\xe2\x9e\x22\x14\xfe\x66\xd6\x7f\x70\x36\xca\x69\x82\x4a\x48\x45\xe5\x27\x0a\xca\x98\xbb\x0e\x27\x1f\x70\xf3\x39\xe0\x94\x9d\x4e\xec\x5d\xdc\xa2\xe7\x38\x1a\x75\x63\x77\x5e\x24\x2e\xdb\xdf\x14\xe0\x4f\x60\x37\x79\xad\xd6\xa9\xe4\x93\x32\xa0\x2b\xe9\x3c\x57\xd0\xe7\xb0\xb4\x4a\x67\x08\x3e\x25\x53\xf4\x5b\xcc\x48\x14\x82\x0f\x11\x17\x4e\x03\xbb\xc2\x75\xe6\x89\x1c\x12\x5b\xc2\x48\x81\x7d\xff\x5d\x88\xcd\x06\x3f\xae\xca\x8e\x86\xa2\x10\xbf\x98\x2e\x98\x29\xef\x50\x0f\xdc\xd5\x63\xc6\x32\x2a\x26\xc8\x06\x43\xa1\x8f\x47\x21\xba\xae\x8b\x83\xf8\x86\xe7\x6f\x11\x22\x8f\xe5\x09\xad\x22\x09\x3c\xe3\x1f\x51\xcb\x46\x96\xda\x9d\xfa\x88\x43\x2b\xf7\x8d\x8d\xa5\xb6\xf2\x53\x99\xaa\xca\x75\xc1\x9f\x8f\xc2\xf8\xcb\x1b\xb3\x46\x56\x9f\x32\x6b\x17\xde\x35\xe9\xf3\x2e\x1e\xc9\xea\x16\x96\x5d\x4e\xf4\x2e\x1b\x76\xbb\xc8\xf3\x66\xeb\xd6\xfe\x2f\xe7\xe1\x05\xac\x91\xb5\xfc\x62\x48\xb9\x7f\x71\x6a\x65\x55\x7d\x9c\xf0\x5f\x00\x00\x00\xff\xff\x2d\xe5\x07\x32\xab\x02\x00\x00")

func metricsMdBytes() ([]byte, error) {
	return bindataRead(
		_metricsMd,
		"metrics.md",
	)
}

func metricsMd() (*asset, error) {
	bytes, err := metricsMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics.md", size: 683, mode: os.FileMode(420), modTime: time.Unix(1459213032, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _projectsMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\xdf\x6f\xdc\x36\x0c\x7e\xd7\x5f\x41\x38\x0f\x6b\x81\x9b\xb3\x24\x2b\x86\xde\xdb\xad\x59\xb7\x02\x5d\x51\x60\x45\xf7\x58\xeb\x64\x3a\xa7\x42\x96\x3c\xfd\xb8\xcb\x21\xc8\xff\x3e\x52\xb6\x62\xb7\xb8\xa0\x2f\xc9\x4b\xce\xa6\x48\x7e\x1f\x3f\x92\x72\xc4\x06\xaa\xc1\xbb\xaf\xa8\x62\x05\x3a\x40\xdc\x21\x18\xe9\x6f\x30\x44\x48\x56\x47\x70\x1d\xc8\x6d\x88\x5e\xaa\xa8\x9d\x05\x6d\x61\x33\xe0\x6d\x0d\x1b\x98\xc2\x40\x39\x1b\x74\x88\x81\x5d\x95\x33\x06\x47\x4f\x7a\xdb\xfc\xfb\x0f\xbc\x97\xfd\xb6\x95\xd0\x25\x9b\xcd\x61\x05\xd2\xb6\x42\x1a\x03\x8d\xa4\x44\x2f\x2e\x5e\x36\xe0\x06\xf4\x32\x9f\xc2\x4e\xee\x11\xa4\x52\x18\x88\x8b\x63\x3a\x01\xe7\xe0\x5a\x88\xb3\x33\x78\xe3\x6c\xa7\x6f\xd2\x18\x22\xc4\xc7\x91\x47\x80\x3e\x11\xe9\x31\x41\x21\x57\x7f\x0d\x44\xa5\xd3\x06\x99\x39\x17\xe7\x9d\x8b\xd0\x6a\x4f\x87\xce\x1f\x6b\xf8\xb4\xa3\xaa\xb3\x03\xd5\x11\xa5\x26\x0e\x2d\xd2\xaf\x09\x54\xb7\x4b\x11\x8e\x2e\xf9\x92\x8e\xc8\x07\x38\x20\x91\x97\x41\xb4\xd8\xc9\x64\x08\xb7\x73\x7e\x59\x9f\xee\x28\x43\x20\x84\xb6\x86\xbf\xd0\xe3\x4f\x94\xc9\x02\xde\xca\x7e\x20\x14\xd6\xf3\x04\xbb\x16\x15\xc9\xae\xed\x0d\x9d\x4e\x89\xb3\x7c\xef\x36\x7f\x43\xe5\x9d\xc1\x8a\x75\x83\xaa\xc7\x9e\x68\x57\x19\x93\x45\x5c\x4a\xd3\x34\x0d\x27\x14\x77\x02\xa0\xb2\xb2\xc7\x6a\x4d\xbf\xae\xc5\x6a\xc5\x16\x22\xa5\xbc\x1e\xd8\x9b\x0f\x3e\xd0\x01\x11\x78\x20\x56\xa6\x20\xfb\x66\x44\x72\x92\xde\xae\xe5\x21\xac\xb5\xec\xd7\xeb\xcb\xd7\x57\xaf\x7e\xb9\xba\x78\xfd\xdb\xd5\xe5\xaf\x6b\xf6\x38\x37\xb9\xb9\x63\xc8\xc4\x6c\x0d\xaf\x2e\x2e\xc5\x3d\x93\xc9\xcd\x7a\xab\xd1\xb4\x81\x1f\xcf\x80\x39\x09\xf1\x81\xfe\xb2\x0c\xdc\x8d\x22\x44\x69\x03\xf9\xf2\x14\xa6\x80\x6d\x69\x58\x51\x63\x2f\x4d\xc2\x5c\x77\xae\xed\x13\x12\x6b\x19\x49\x17\x1a\x93\xc1\xe3\x1e\x6d\xcc\xe3\xa7\x43\x1e\xa4\x2d\xc6\x03\xa2\xa5\xa1\x30\x51\x2f\xea\x63\xa1\x7e\x86\x78\x1c\x70\x0d\x0d\xcd\x35\x49\xde\x90\xc1\xe3\x7f\x89\x5b\x36\x12\x5d\x48\x25\xc4\xf5\xfc\xf2\x03\xda\xda\x12\xbd\x3e\x8f\xa5\x34\xa7\x70\x72\x72\x9f\x6c\xd4\x2c\xc4\xf5\x54\xd9\x64\xe0\xe4\xa5\x9d\x2f\xc2\x4b\x5a\x3f\xc3\x5b\x10\x06\x54\x9a\x20\x8a\x20\x7a\x1e\xb6\x71\x7e\xd4\x72\x1d\x1e\x45\x1d\xdb\x33\x83\x8e\xef\x3c\x43\x4e\xc9\x52\xdb\x93\xc2\x6b\x1b\x27\x6c\xae\x8e\x56\x69\x06\x9f\x0c\xcf\x08\xc9\xe3\xb9\x50\xd8\x99\x67\x96\x77\x9a\xd2\x3f\xec\x5e\x7b\x67\x7b\x1a\xc6\x19\x9d\xc6\xc2\x4b\xf2\x4e\x2a\x26\x8f\x80\xb3\xcf\xa3\xe9\xf0\x54\x9e\x85\x91\xb6\xc1\x6b\xb9\xa5\x0a\x9e\xbc\x2c\xb7\xe5\xd1\x6e\xe6\x8d\x2d\x9b\x26\x44\x79\x1a\xf7\x93\xf6\x4e\xb9\x7e\x48\xf4\xce\x3b\x51\xd2\xe7\x98\x50\xc3\xef\xc7\x87\xd5\xe5\xe3\x58\x62\x9b\xbb\xbb\x7a\xba\xb2\x6b\xbe\x0a\xee\xef\xbf\x90\xe5\x6d\x21\x37\x9a\x9a\x72\x0b\xac\xf2\xc6\x7f\x77\x47\xd1\xbd\x34\xe8\xf1\x42\x6c\xea\xf3\x87\x2b\xf0\x9c\x02\x7c\x68\x68\xf5\x89\x17\x29\xc3\x5e\x5f\xb2\xad\xa2\x4d\x75\x74\xeb\x07\x96\x8c\x6f\x8b\x4e\xdf\x92\xd8\x2b\x86\xc8\x84\xbe\x87\x5f\xc1\x61\xa7\xd5\x0e\x0e\x2e\xd1\x6a\x7b\x0c\x63\x1f\xa1\x9a\xd2\x3d\xba\xdb\xfc\xe9\xb0\xd8\x7e\x26\x2f\xa6\x34\x37\xcf\xa6\x7e\x8b\x9e\xbb\x55\x7c\x1e\x14\xa3\x0f\xc4\x7e\xf2\x07\xd2\x6f\xf1\xd5\x7c\xc2\x85\xd8\x0f\x6a\x26\xf3\xf9\xe3\x9b\x6f\x63\x9e\x75\x8a\x32\x78\x1d\x50\x25\xaf\xe3\xf1\x4f\xef\xd2\x40\xc2\xbc\xa7\xff\x19\x18\xb6\xd8\xe1\x26\x1f\xc0\xbb\xeb\xb0\xc8\x23\xbd\x97\xc7\x6f\xd2\xa4\xad\xc5\xb8\x8c\x1f\x0d\xa7\xe3\xfe\x0f\x00\x00\xff\xff\xb0\xe1\xe5\x9e\xdf\x08\x00\x00")

func projectsMdBytes() ([]byte, error) {
	return bindataRead(
		_projectsMd,
		"projects.md",
	)
}

func projectsMd() (*asset, error) {
	bytes, err := projectsMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "projects.md", size: 2271, mode: os.FileMode(420), modTime: time.Unix(1460166458, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rollbackMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\x31\x4e\x03\x31\x10\x45\xfb\x39\xc5\x97\x42\xc9\x22\x05\x89\x26\x1d\x05\x3d\xe2\x02\xac\x71\x66\x59\x0b\xe3\xb1\xc6\x76\x36\x69\x38\x3b\xb6\x96\x6c\x40\x21\x29\xad\x37\xf3\xfe\xf7\xd0\x63\xe4\x3d\x8c\xf7\x32\x25\x1c\xa4\x20\x0b\x54\xbc\xc7\x9b\xb1\x1f\xed\x91\x47\x46\x54\xde\x39\x29\xe9\x16\xa2\x48\x91\xad\x1b\x1c\x6f\xb1\x63\x4d\x4e\x02\x64\x80\xc1\x50\x82\xcd\xf5\x75\x47\xb4\x5a\xe1\x69\x6f\x3e\xa3\xe7\x44\xf4\x52\x65\xff\xb9\xa0\xec\xd9\x24\xde\x10\xf5\x7d\x9f\x46\xba\x81\x69\x55\xf4\x38\x3f\x88\x34\xf2\xd7\xf0\x13\x6e\x8f\xd9\xd7\xb6\xf1\x30\xef\x3f\xb7\x44\x9e\x4e\x6c\x72\x79\x44\xdf\x75\x5b\x3d\x74\x5a\x42\x7f\x51\xb2\x8c\xa0\x9e\x87\xd5\xd6\xba\x44\x5f\xf5\x5a\xce\x24\x64\x4e\xd9\x85\xf7\xd7\x13\x9a\xc1\x06\xb6\xa8\x72\xc8\xb4\x94\xc4\x3d\x5d\x71\x97\x18\x67\x01\xd6\xe7\xf6\x05\xfe\xb2\xad\xcf\x92\xda\x3f\xbf\x03\x00\x00\xff\xff\x78\xc2\x4d\x71\xca\x01\x00\x00")

func rollbackMdBytes() ([]byte, error) {
	return bindataRead(
		_rollbackMd,
		"rollback.md",
	)
}

func rollbackMd() (*asset, error) {
	bytes, err := rollbackMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rollback.md", size: 458, mode: os.FileMode(420), modTime: time.Unix(1454192932, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _shimMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8f\x41\x4e\x04\x21\x10\x45\xf7\x73\x8a\x7f\x80\xb1\xef\xa0\xd1\x85\x89\x19\x93\xb1\x3d\x40\x0d\x54\x03\x06\x28\x42\x41\xdb\xde\x5e\x5a\xd3\x9b\xd9\x56\xbd\xff\xf3\xdf\xe9\xb1\xf0\x86\xae\xac\x20\x5c\xc4\xf2\xf4\xa5\x50\x1f\x12\x16\xa9\xc8\x92\x1f\x32\xb5\xb0\x32\x22\x65\xd7\xc9\x31\xb4\x97\x22\xb5\x4d\x98\x7d\x50\x84\x3d\xb7\x72\xfd\x81\x26\x8a\x11\xa5\x8a\xab\x94\xf0\xed\x83\xf1\xe0\x8d\x4d\x6f\xa3\x3b\xe4\x81\x19\x1f\xa2\xdd\x09\xc3\xaa\x67\x50\xb6\x58\x98\xad\xe2\x8d\xd2\xcd\xd2\x80\x4a\x6f\x68\xbe\x4a\x77\x1e\x1f\xf3\xf3\xeb\xe5\x9f\x3a\x4a\xa5\xb7\x3b\xe2\xfd\x73\x9e\xf0\xc4\x86\x86\x01\x64\x19\xaf\x31\x68\xdc\x5f\xae\x57\xa4\xae\x0d\x37\xde\xe5\xec\x9f\x4d\x14\xe7\x42\x76\xe7\xa1\xd5\x8e\xf0\xe9\x37\x00\x00\xff\xff\x5a\x55\x30\x0a\x01\x01\x00\x00")

func shimMdBytes() ([]byte, error) {
	return bindataRead(
		_shimMd,
		"shim.md",
	)
}

func shimMd() (*asset, error) {
	bytes, err := shimMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "shim.md", size: 257, mode: os.FileMode(420), modTime: time.Unix(1454192938, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _upgradeMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe2\x0a\xc9\x48\x55\x48\x48\x2c\x48\xad\x50\x28\x2d\x48\x2f\x4a\x4c\x49\x4d\x50\x48\xce\xcf\xcd\x4d\xcc\x4b\x51\x28\xcf\xcc\xc9\x01\x8a\xa6\x24\x96\xa4\x2a\x54\xe6\x97\x16\x29\x64\xe6\x15\x97\x24\xe6\xe4\x24\x96\x64\xe6\xe7\x29\xe4\xa7\x41\xf4\x69\x18\x6a\x26\x28\x58\x69\xea\x71\x01\x02\x00\x00\xff\xff\x97\x4e\x2a\xdd\x4b\x00\x00\x00")

func upgradeMdBytes() ([]byte, error) {
	return bindataRead(
		_upgradeMd,
		"upgrade.md",
	)
}

func upgradeMd() (*asset, error) {
	bytes, err := upgradeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "upgrade.md", size: 75, mode: os.FileMode(420), modTime: time.Unix(1454192943, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"aws-credentials.md": awsCredentialsMd,
	"bindata.go": bindataGo,
	"build.md": buildMd,
	"delete.md": deleteMd,
	"deploy.md": deployMd,
	"docs.go": docsGo,
	"docs.md": docsMd,
	"dryrun.md": dryrunMd,
	"env.md": envMd,
	"faq.md": faqMd,
	"functions.md": functionsMd,
	"getting-started.md": gettingStartedMd,
	"hooks.md": hooksMd,
	"ignore.md": ignoreMd,
	"installation.md": installationMd,
	"invoke.md": invokeMd,
	"java.md": javaMd,
	"links.md": linksMd,
	"list.md": listMd,
	"logs.md": logsMd,
	"metrics.md": metricsMd,
	"projects.md": projectsMd,
	"rollback.md": rollbackMd,
	"shim.md": shimMd,
	"upgrade.md": upgradeMd,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"aws-credentials.md": &bintree{awsCredentialsMd, map[string]*bintree{}},
	"bindata.go": &bintree{bindataGo, map[string]*bintree{}},
	"build.md": &bintree{buildMd, map[string]*bintree{}},
	"delete.md": &bintree{deleteMd, map[string]*bintree{}},
	"deploy.md": &bintree{deployMd, map[string]*bintree{}},
	"docs.go": &bintree{docsGo, map[string]*bintree{}},
	"docs.md": &bintree{docsMd, map[string]*bintree{}},
	"dryrun.md": &bintree{dryrunMd, map[string]*bintree{}},
	"env.md": &bintree{envMd, map[string]*bintree{}},
	"faq.md": &bintree{faqMd, map[string]*bintree{}},
	"functions.md": &bintree{functionsMd, map[string]*bintree{}},
	"getting-started.md": &bintree{gettingStartedMd, map[string]*bintree{}},
	"hooks.md": &bintree{hooksMd, map[string]*bintree{}},
	"ignore.md": &bintree{ignoreMd, map[string]*bintree{}},
	"installation.md": &bintree{installationMd, map[string]*bintree{}},
	"invoke.md": &bintree{invokeMd, map[string]*bintree{}},
	"java.md": &bintree{javaMd, map[string]*bintree{}},
	"links.md": &bintree{linksMd, map[string]*bintree{}},
	"list.md": &bintree{listMd, map[string]*bintree{}},
	"logs.md": &bintree{logsMd, map[string]*bintree{}},
	"metrics.md": &bintree{metricsMd, map[string]*bintree{}},
	"projects.md": &bintree{projectsMd, map[string]*bintree{}},
	"rollback.md": &bintree{rollbackMd, map[string]*bintree{}},
	"shim.md": &bintree{shimMd, map[string]*bintree{}},
	"upgrade.md": &bintree{upgradeMd, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

